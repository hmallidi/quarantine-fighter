{"ast":null,"code":"import _slicedToArray from\"/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{Map,GoogleApiWrapper}from\"google-maps-react\";import{Route}from\"react-router-dom\";import{HashRouter}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import clsx from'clsx';import axios from'axios';import ReactDOM from\"react-dom\";import{MDBDataTable}from'mdbreact';var mapStyles={width:'50%',height:'50%'};function Drugstore(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchCity=_useState2[0],setSearchCity=_useState2[1];// search is null to start with\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchName=_useState4[0],setSearchName=_useState4[1];//data encapsulates all of the fields below it, so those aren't necessary\nvar _useState5=useState(),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];useEffect(function(){axios.get(getURL()).then(function(result){//axios.get('/api/City/1').then((result) => {\nconsole.log(result);console.log(result.data);for(var index=0;index<result.data.length;index++){result.data[index].google_maps_url=/*#__PURE__*/React.createElement(\"a\",{href:result.data[index].google_maps_url},\" Open Google Maps \");for(var openingIndex=0;openingIndex<result.data[index].opening_hours.length;openingIndex++){result.data[index].opening_hours[openingIndex]=/*#__PURE__*/React.createElement(\"li\",null,\" \",result.data[index].opening_hours[openingIndex],\" \");}}// setState({ data: result.data});\nsetData(result.data);});},[]);var getURL=function getURL(){//var replaceName = searchName.replace(' ', '+');\n//var searchString = '/api/City/?name='.concat(replaceName);\nvar searchString='/api/Drugstore/all/';console.log(searchString);return searchString;};var testData={columns:[{label:'Name',field:'name',sort:'asc',width:150},{label:'Address',field:'address',sort:'asc',width:270},{label:'Opening Hours',field:'opening_hours',sort:'asc',width:100},{label:'Business Status',field:'business_status',sort:'asc',width:150},{label:'Google Maps URL',field:'google_maps_url',sort:'asc',width:150}],rows:data};return/*#__PURE__*/React.createElement(MDBDataTable,{striped:true,bordered:true,small:true,data:testData});};GoogleApiWrapper({apiKey:'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'})(Drugstore);export default Drugstore;","map":{"version":3,"sources":["/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/src/Drugstore.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","clsx","axios","ReactDOM","MDBDataTable","mapStyles","width","height","Drugstore","props","searchCity","setSearchCity","searchName","setSearchName","data","setData","get","getURL","then","result","console","log","index","length","google_maps_url","openingIndex","opening_hours","searchString","testData","columns","label","field","sort","rows","apiKey"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,OAASC,GAAT,CAAcC,gBAAd,KAAsC,mBAAtC,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,YAAT,KAA6B,UAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,KADS,CAEhBC,MAAM,CAAE,KAFQ,CAAlB,CAKA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAAyB,eACaf,QAAQ,CAAC,EAAD,CADrB,wCAChBgB,UADgB,eACJC,aADI,eAC2B;AAD3B,eAEajB,QAAQ,CAAC,EAAD,CAFrB,yCAEhBkB,UAFgB,eAEJC,aAFI,eAIvB;AAJuB,eAKCnB,QAAQ,EALT,yCAKhBoB,IALgB,eAKVC,OALU,eAOvBpB,SAAS,CAAC,UAAK,CACbO,KAAK,CAACc,GAAN,CAAUC,MAAM,EAAhB,EAAoBC,IAApB,CAAyB,SAACC,MAAD,CAAY,CACtC;AACEC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACL,IAAnB,EAEA,IAAK,GAAIQ,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGH,MAAM,CAACL,IAAP,CAAYS,MAAxC,CAAgDD,KAAK,EAArD,CAAyD,CAEtDH,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBE,eAAnB,cAAsC,yBAAG,IAAI,CAAEL,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBE,eAA5B,uBAAtC,CACA,IAAI,GAAIC,CAAAA,YAAY,CAAG,CAAvB,CAA0BA,YAAY,CAAGN,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBI,aAAnB,CAAiCH,MAA1E,CAAkFE,YAAY,EAA9F,CAAiG,CAC/FN,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBI,aAAnB,CAAiCD,YAAjC,eAAiD,kCAAMN,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBI,aAAnB,CAAiCD,YAAjC,CAAN,KAAjD,CACD,CAEF,CAEF;AACAV,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP,CACD,CAhBA,EAkBD,CAnBQ,CAmBN,EAnBM,CAAT,CAqBA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AACA;AACA,GAAIU,CAAAA,YAAY,CAAI,qBAApB,CACAP,OAAO,CAACC,GAAR,CAAYM,YAAZ,EACA,MAAOA,CAAAA,YAAP,CACD,CAND,CASA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,OAAO,CAAE,CACP,CACEC,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,MAFT,CAGEC,IAAI,CAAE,KAHR,CAIE1B,KAAK,CAAE,GAJT,CADO,CAOP,CACEwB,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,SAFT,CAGEC,IAAI,CAAE,KAHR,CAIE1B,KAAK,CAAE,GAJT,CAPO,CAaP,CACEwB,KAAK,CAAE,eADT,CAEEC,KAAK,CAAE,eAFT,CAGEC,IAAI,CAAE,KAHR,CAIE1B,KAAK,CAAE,GAJT,CAbO,CAmBP,CACEwB,KAAK,CAAE,iBADT,CAEEC,KAAK,CAAE,iBAFT,CAGEC,IAAI,CAAE,KAHR,CAIE1B,KAAK,CAAE,GAJT,CAnBO,CAyBP,CACEwB,KAAK,CAAE,iBADT,CAEEC,KAAK,CAAE,iBAFT,CAGEC,IAAI,CAAE,KAHR,CAIE1B,KAAK,CAAE,GAJT,CAzBO,CADM,CAiCf2B,IAAI,CAAEnB,IAjCS,CAAjB,CAsCA,mBACE,oBAAC,YAAD,EACE,OAAO,KADT,CAEE,QAAQ,KAFV,CAGE,KAAK,KAHP,CAIE,IAAI,CAAEc,QAJR,EADF,CASD,EAED/B,gBAAgB,CAAC,CACfqC,MAAM,CAAE,yCADO,CAAD,CAAhB,CAEG1B,SAFH,EAGA,cAAeA,CAAAA,SAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\nfunction Drugstore(props){\n  const [searchCity, setSearchCity] = useState(\"\"); // search is null to start with\n  const [searchName, setSearchName] = useState(\"\");\n    \n  //data encapsulates all of the fields below it, so those aren't necessary\n  const [data, setData] = useState();\n\n  useEffect(()=> {\n    axios.get(getURL()).then((result) => {\n   //axios.get('/api/City/1').then((result) => {\n     console.log(result)\n     console.log(result.data);\n\n     for (var index = 0; index < result.data.length; index++) {\n\n        result.data[index].google_maps_url =  <a href={result.data[index].google_maps_url} > Open Google Maps </a>\n        for(var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++){\n          result.data[index].opening_hours[openingIndex] = <li> {result.data[index].opening_hours[openingIndex]} </li>\n        }\n     \n      }\n\n     // setState({ data: result.data});\n     setData(result.data);\n   });\n\n  }, []  )\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString  = '/api/Drugstore/all/';\n    console.log(searchString);\n    return searchString;\n  }\n\n\n  const testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Opening Hours',\n        field: 'opening_hours',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Business Status',\n        field: 'business_status',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Google Maps URL',\n        field: 'google_maps_url',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n \n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={testData}\n    />\n  );\n\n};\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Drugstore);\nexport default Drugstore;"]},"metadata":{},"sourceType":"module"}