{"ast":null,"code":"import _slicedToArray from\"/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{Map,GoogleApiWrapper}from\"google-maps-react\";import{Route}from\"react-router-dom\";import{HashRouter}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import clsx from'clsx';import axios from'axios';import ReactDOM from\"react-dom\";import{MDBDataTable}from'mdbreact';import\"./subpage.css\";import{Link}from\"react-router-dom\";function Group3(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),trackData=_useState2[0],setTrackData=_useState2[1];// const [artistData, setArtistData] = useState();\n// const [albumData, setAlbumData] = useState();\nvar updateTrackData=function updateTrackData(result){console.log(result);console.log(result.data);for(var index=0;index<result.data.length;index++){result.data[index].track_image_url=/*#__PURE__*/React.createElement(\"img\",{src:result.data[index].track_image_url,alt:\"Track Image\",style:\"width:100 height:100\"});for(var i=0;i<result.data[index].track_artists.length;i++){result.data[index].track_artists[i]=/*#__PURE__*/React.createElement(\"li\",null,\" \",result.data[index].track_artists[i],\" \");}}setTrackData(result.data);};// const updateAlbumData = (result) => {\n//   console.log(result);\n//   console.log(result.data);\n//   for (var index = 0; index < result.data.length; index++) {\n//         result.data[index].album_image_url =  <img src={result.data[index].album_image_url} alt=\"Album Image\"/>\n//         for(var i = 0; i < result.data[index].album_tracks.length; i++){\n//           result.data[index].album_tracks[i] = <li> {result.data[index].album_tracks[i]} </li>\n//         }\n//         for(var i = 0; i < result.data[index].album_genres.length; i++){\n//           result.data[index].album_genres[i] = <li> {result.data[index].album_genres[i]} </li>\n//         }\n//         for(var i = 0; i < result.data[index].album_artists.length; i++){\n//           result.data[index].album_artists[i] = <li> {result.data[index].album_artists[i]} </li>\n//         }\n//    }\n//   setAlbumData(result.data);\n// }\n// const updateArtistData = (result) => {\n//   console.log(result);\n//   console.log(result.data);\n//   for (var index = 0; index < result.data.length; index++) {\n//         result.data[index].artist_image_url =  <img src={result.data[index].artist_image_url} alt=\"Artist Image\"/>\n//         result.data[index].artist_spotify_url =  <a href={result.data[index].artist_spotify_url} > Open This Artist's Spotify Link </a>\n//         for(var i = 0; i < result.data[index].artist_genres.length; i++){\n//           result.data[index].artist_genres[i] = <li> {result.data[index].artist_genres[i]} </li>\n//         }\n//         for(var i = 0; i < result.data[index].artist_albums.length; i++){\n//           result.data[index].artist_albums[i] = <li> {result.data[index].artist_albums[i]} </li>\n//         }\n//    }\n//   setArtistData(result.data);\n// }\nuseEffect(function(){axios.get(\"/Group3/track\").then(function(result){console.log(result);console.log(result.data);updateTrackData(result);});// axios.get(\"/Group3/artist\").then((result) => {\n//   console.log(result);\n//   console.log(result.data);\n//   updateArtistData(result);\n// });\n// axios.get(\"/Group3/album\").then((result) => {\n//   console.log(result);\n//   console.log(result.data);\n//   updateAlbumData(result);\n// });\n},[]);// const artists = {\n//   columns: [\n//     {\n//       label: 'Name',\n//       field: 'artist_name',\n//       sort: 'asc',\n//       width: 150\n//     },\n//     {\n//       label: 'Image',\n//       field: 'artist_image_url',\n//       sort: 'asc',\n//       width: 270\n//     },\n//     {\n//       label: 'Spotify Link',\n//       field: 'artist_spotify_url',\n//       sort: 'asc',\n//       width: 200\n//     },\n//     {\n//       label: 'Genres',\n//       field: 'artist_genres',\n//       sort: 'asc',\n//       width: 100\n//     },\n//     {\n//       label: 'Albums',\n//       field: 'artist_albums',\n//       sort: 'asc',\n//       width: 150\n//     }\n//   ],\n//   rows: artistData\n// };\n// const albums = {\n//   columns: [\n//     {\n//       label: 'Album Name',\n//       field: 'album_name',\n//       sort: 'asc',\n//       width: 150\n//     },\n//     {\n//       label: 'Genres',\n//       field: 'album_genres',\n//       sort: 'asc',\n//       width: 270\n//     },\n//     {\n//       label: 'Tracks',\n//       field: 'album_tracks',\n//       sort: 'asc',\n//       width: 200\n//     },\n//     {\n//       label: 'Artists',\n//       field: 'album_artists',\n//       sort: 'asc',\n//       width: 100\n//     },\n//     {\n//       label: 'Image',\n//       field: 'album_image_url',\n//       sort: 'asc',\n//       width: 150\n//     }\n//   ],\n//   rows: albumData\n// };\nvar tracks={columns:[{label:'Track Name',field:'track_name',sort:'asc',width:150},{label:'Duration',field:'track_duration',sort:'asc',width:270},{label:'Album',field:'album_name',sort:'asc',width:200},{label:'Artists',field:'track_artists',sort:'asc',width:150},{label:'Track Image',field:'track_image_url',sort:'asc',width:100}],rows:trackData};return/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Exercising Group3 API\"),/*#__PURE__*/React.createElement(MDBDataTable,{striped:true,bordered:true,small:true,data:tracks})));}export default Group3;","map":{"version":3,"sources":["/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/src/Group3.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","clsx","axios","ReactDOM","MDBDataTable","Link","Group3","props","trackData","setTrackData","updateTrackData","result","console","log","data","index","length","track_image_url","i","track_artists","get","then","tracks","columns","label","field","sort","width","rows"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\nimport {Link } from \"react-router-dom\";\n\nfunction Group3(props){\n  const [trackData, setTrackData] = useState();\n  // const [artistData, setArtistData] = useState();\n  // const [albumData, setAlbumData] = useState();\n\n  const updateTrackData = (result) => {\n    console.log(result);\n    console.log(result.data);\n\n    for (var index = 0; index < result.data.length; index++) {\n          result.data[index].track_image_url =  <img src={result.data[index].track_image_url} alt=\"Track Image\" style=\"width:100 height:100\"/>\n          for(var i = 0; i < result.data[index].track_artists.length; i++){\n            result.data[index].track_artists[i] = <li> {result.data[index].track_artists[i]} </li>\n          }\n     }\n\n    setTrackData(result.data);\n  }\n\n  // const updateAlbumData = (result) => {\n  //   console.log(result);\n  //   console.log(result.data);\n\n  //   for (var index = 0; index < result.data.length; index++) {\n  //         result.data[index].album_image_url =  <img src={result.data[index].album_image_url} alt=\"Album Image\"/>\n  //         for(var i = 0; i < result.data[index].album_tracks.length; i++){\n  //           result.data[index].album_tracks[i] = <li> {result.data[index].album_tracks[i]} </li>\n  //         }\n\n  //         for(var i = 0; i < result.data[index].album_genres.length; i++){\n  //           result.data[index].album_genres[i] = <li> {result.data[index].album_genres[i]} </li>\n  //         }\n\n  //         for(var i = 0; i < result.data[index].album_artists.length; i++){\n  //           result.data[index].album_artists[i] = <li> {result.data[index].album_artists[i]} </li>\n  //         }\n  //    }\n\n  //   setAlbumData(result.data);\n  // }\n\n  // const updateArtistData = (result) => {\n  //   console.log(result);\n  //   console.log(result.data);\n\n  //   for (var index = 0; index < result.data.length; index++) {\n  //         result.data[index].artist_image_url =  <img src={result.data[index].artist_image_url} alt=\"Artist Image\"/>\n  //         result.data[index].artist_spotify_url =  <a href={result.data[index].artist_spotify_url} > Open This Artist's Spotify Link </a>\n\n  //         for(var i = 0; i < result.data[index].artist_genres.length; i++){\n  //           result.data[index].artist_genres[i] = <li> {result.data[index].artist_genres[i]} </li>\n  //         }\n\n  //         for(var i = 0; i < result.data[index].artist_albums.length; i++){\n  //           result.data[index].artist_albums[i] = <li> {result.data[index].artist_albums[i]} </li>\n  //         }\n  //    }\n\n  //   setArtistData(result.data);\n  // }\n\n  useEffect(()=> {\n    axios.get(\"/Group3/track\").then((result) => {\n\n      console.log(result);\n      console.log(result.data);\n\n      updateTrackData(result);\n    });\n\n    // axios.get(\"/Group3/artist\").then((result) => {\n\n    //   console.log(result);\n    //   console.log(result.data);\n\n    //   updateArtistData(result);\n    // });\n\n    // axios.get(\"/Group3/album\").then((result) => {\n\n    //   console.log(result);\n    //   console.log(result.data);\n\n    //   updateAlbumData(result);\n    // });\n\n\n}, []  )\n\n  // const artists = {\n  //   columns: [\n  //     {\n  //       label: 'Name',\n  //       field: 'artist_name',\n  //       sort: 'asc',\n  //       width: 150\n  //     },\n  //     {\n  //       label: 'Image',\n  //       field: 'artist_image_url',\n  //       sort: 'asc',\n  //       width: 270\n  //     },\n  //     {\n  //       label: 'Spotify Link',\n  //       field: 'artist_spotify_url',\n  //       sort: 'asc',\n  //       width: 200\n  //     },\n  //     {\n  //       label: 'Genres',\n  //       field: 'artist_genres',\n  //       sort: 'asc',\n  //       width: 100\n  //     },\n  //     {\n  //       label: 'Albums',\n  //       field: 'artist_albums',\n  //       sort: 'asc',\n  //       width: 150\n  //     }\n  //   ],\n  //   rows: artistData\n  // };\n  \n  // const albums = {\n  //   columns: [\n  //     {\n  //       label: 'Album Name',\n  //       field: 'album_name',\n  //       sort: 'asc',\n  //       width: 150\n  //     },\n  //     {\n  //       label: 'Genres',\n  //       field: 'album_genres',\n  //       sort: 'asc',\n  //       width: 270\n  //     },\n  //     {\n  //       label: 'Tracks',\n  //       field: 'album_tracks',\n  //       sort: 'asc',\n  //       width: 200\n  //     },\n  //     {\n  //       label: 'Artists',\n  //       field: 'album_artists',\n  //       sort: 'asc',\n  //       width: 100\n  //     },\n  //     {\n  //       label: 'Image',\n  //       field: 'album_image_url',\n  //       sort: 'asc',\n  //       width: 150\n  //     }\n  //   ],\n  //   rows: albumData\n  // };\n  \n  const tracks = {\n    columns: [\n      {\n        label: 'Track Name',\n        field: 'track_name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Duration',\n        field: 'track_duration',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Album',\n        field: 'album_name',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Artists',\n        field: 'track_artists',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Track Image',\n        field: 'track_image_url',\n        sort: 'asc',\n        width: 100\n      }\n    ],\n    rows: trackData\n  };\n\n  return (\n    <main>\n      <div>\n        <h1>Exercising Group3 API</h1>\n\n        <MDBDataTable\n          striped\n          bordered\n          small\n          data={tracks}\n        />\n\n        {/* <br></br>\n        <br></br>\n        \n        <MDBDataTable\n          striped\n          bordered\n          small\n          data={artists}\n        />\n        \n        <br></br>\n        <br></br>\n        \n        <MDBDataTable\n          striped\n          bordered\n          small\n          data={albums}\n        /> */}\n        </div>\n    </main>\n\n  );\n}\n \nexport default Group3;"]},"metadata":{},"sourceType":"module"}