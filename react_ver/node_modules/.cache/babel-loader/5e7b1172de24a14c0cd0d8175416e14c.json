{"ast":null,"code":"var _jsxFileName = \"/Users/angelacao/Desktop/covid-fighter/react_ver/src/City.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport citypic from \"./citypic.jpg\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\"; // function made from the Grocery class below\n\nfunction City(props) {\n  //variables for search parameters\n  const [search, setSearch] = useState(\"\"); // search is null to start with\n  //variables, change all vars to const or let\n\n  const [data, setData] = useState();\n  const [originalData, setOriginalData] = useState();\n  useEffect(() => {\n    var searchString = '/api/City/all/';\n    axios.get(searchString).then(result => {\n      for (var index = 0; index < result.data.length; index++) {\n        result.data[index].latitude = result.data[index].latitude.toString();\n        result.data[index].longitude = result.data[index].longitude.toString();\n        result.data[index].population = result.data[index].population.toString();\n      }\n\n      setOriginalData(result.data);\n      setData(result.data);\n    });\n  }, []);\n  const testData = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'State',\n      field: 'state',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Latitude',\n      field: 'latitude',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Longitude',\n      field: 'longitude',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Population',\n      field: 'population',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: data\n  };\n\n  const getUserInput = event => {\n    setSearch(event.target.value);\n    console.log(search);\n    updateSearchTable();\n  };\n\n  const updateSearchTable = () => {\n    let updateData = [];\n\n    if (search === \"\") {\n      setData(originalData);\n    }\n\n    if (search.includes(\" \")) {\n      let words = search.split(\" \");\n\n      for (var index = 0; index < originalData.length; index++) {\n        let wordAdded = true;\n\n        for (var i = 0; i < words.length; i++) {\n          if (!originalData[index].name.toLowerCase().includes(words[i].toLowerCase()) && !originalData[index].state.toLowerCase().includes(words[i].toLowerCase()) && !originalData[index].latitude.toLowerCase().includes(words[i].toLowerCase()) && !originalData[index].longitude.toLowerCase().includes(words[i].toLowerCase()) && !originalData[index].population.toLowerCase().includes(words[i].toLowerCase())) {\n            wordAdded = false;\n          }\n        }\n\n        if (wordAdded) {\n          updateData.push(originalData[index]);\n        }\n      }\n    } else {\n      for (var index = 0; index < originalData.length; index++) {\n        if (originalData[index].name.toLowerCase().includes(search.toLowerCase()) || originalData[index].state.toLowerCase().includes(search.toLowerCase()) || originalData[index].latitude.toLowerCase().includes(search.toLowerCase()) || originalData[index].longitude.toLowerCase().includes(search.toLowerCase()) || originalData[index].population.toLowerCase().includes(search.toLowerCase())) {\n          updateData.push(originalData[index]);\n        }\n      }\n    }\n\n    setData(updateData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: citypic,\n    className: \"subpage_img\",\n    alt: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, \"Cities\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"input\",\n    value: search,\n    onChange: getUserInput,\n    placeholder: \"Search by Name, State, Latitude, Longitude, Population\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: testData,\n    searching: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }\n  }));\n}\n\n;\nexport default City;","map":{"version":3,"sources":["/Users/angelacao/Desktop/covid-fighter/react_ver/src/City.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","citypic","MDBDataTable","City","props","search","setSearch","data","setData","originalData","setOriginalData","searchString","get","then","result","index","length","latitude","toString","longitude","population","testData","columns","label","field","sort","width","rows","getUserInput","event","target","value","console","log","updateSearchTable","updateData","includes","words","split","wordAdded","i","name","toLowerCase","state","push","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport citypic from \"./citypic.jpg\"\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\n\n\n// function made from the Grocery class below\nfunction City(props){\n\n  //variables for search parameters\n  const [search, setSearch] = useState(\"\"); // search is null to start with\n\n\n  //variables, change all vars to const or let\n  const [data, setData] = useState();\n  const [originalData, setOriginalData] = useState();\n\n  useEffect(()=> {\n      var searchString  = '/api/City/all/';\n      axios.get(searchString).then((result) => {\n        for (var index = 0; index < result.data.length; index++) {\n          result.data[index].latitude = result.data[index].latitude.toString();\n          result.data[index].longitude = result.data[index].longitude.toString();\n          result.data[index].population = result.data[index].population.toString();\n        }\n      \n        setOriginalData(result.data);\n        setData(result.data);\n    });\n\n  }, []  )\n\nconst testData = {\n  columns: [\n    {\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    },\n    {\n      label: 'State',\n      field: 'state',\n      sort: 'asc',\n      width: 270\n    },\n    {\n      label: 'Latitude',\n      field: 'latitude',\n      sort: 'asc',\n      width: 200\n    },\n    {\n      label: 'Longitude',\n      field: 'longitude',\n      sort: 'asc',\n      width: 100\n    },\n    {\n      label: 'Population',\n      field: 'population',\n      sort: 'asc',\n      width: 150\n    }\n  ],\n  rows: data\n};\n\n\nconst getUserInput = event => {\n  setSearch(event.target.value);\n  console.log(search);\n  updateSearchTable();\n};\n\nconst updateSearchTable = () => {\n  let updateData = [];\n \n  if(search === \"\"){\n    setData(originalData);\n  }\n  if(search.includes(\" \")){\n    let words = search.split(\" \");\n\n      for (var index = 0; index < originalData.length; index++) {\n        let wordAdded = true;\n\n        for(var i = 0; i < words.length; i++){\n          if(!(originalData[index].name.toLowerCase().includes(words[i].toLowerCase())) && !(originalData[index].state.toLowerCase().includes(words[i].toLowerCase())) && \n              !(originalData[index].latitude.toLowerCase().includes(words[i].toLowerCase())) && !(originalData[index].longitude.toLowerCase().includes(words[i].toLowerCase()))\n              && !(originalData[index].population.toLowerCase().includes(words[i].toLowerCase()))){\n\n            wordAdded = false;\n          }\n        }\n        \n        if(wordAdded){\n          updateData.push(originalData[index]);\n        }\n      }\n  }\n  else{\n    for (var index = 0; index < originalData.length; index++) {\n      if((originalData[index].name.toLowerCase().includes(search.toLowerCase())) || (originalData[index].state.toLowerCase().includes(search.toLowerCase())) ||\n        (originalData[index].latitude.toLowerCase().includes(search.toLowerCase())) ||  (originalData[index].longitude.toLowerCase().includes(search.toLowerCase()))\n        || (originalData[index].population.toLowerCase().includes(search.toLowerCase()))){\n        \n          updateData.push(originalData[index]);\n      }\n    }\n  }\n\n  setData(updateData);\n\n}; \n\n\nreturn (\n  <div>\n  <img src={citypic} className={\"subpage_img\"} alt=\"city\"/>\n  <br></br>\n  <br></br>\n\n  <center>\n    <h2>Cities</h2>\n      </center>    \n  \n    <br></br>\n    <br></br>\n\n    <center>\n      <form onSubmit={e => { e.preventDefault(); }}>\n      <input type=\"text\" name=\"input\" value={search} onChange={getUserInput} placeholder= \"Search by Name, State, Latitude, Longitude, Population\"></input>\n    </form>\n    </center>\n\n    <br></br>\n\n  <MDBDataTable\n    striped\n    bordered\n    small\n    data={testData}\n    searching = {false}\n  />\n  </div>\n  \n\n);\n};\n\n\nexport default City;\n\n"]},"metadata":{},"sourceType":"module"}