{"ast":null,"code":"import _slicedToArray from\"/Users/wankew22/Desktop/covid-fighter/react_ver/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{Map,GoogleApiWrapper}from\"google-maps-react\";import{Route}from\"react-router-dom\";import{HashRouter}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import clsx from'clsx';import axios from'axios';var mapStyles={width:'50%',height:'50%'};function Drugstore(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];// search is null to start with\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),id=_useState6[0],setID=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),address=_useState10[0],setAddress=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),zipcode=_useState12[0],setZipcode=_useState12[1];var _useState13=useState(0.0),_useState14=_slicedToArray(_useState13,2),latitude=_useState14[0],setLatitude=_useState14[1];var _useState15=useState(0.0),_useState16=_slicedToArray(_useState15,2),longitude=_useState16[0],setLongitude=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),openingHours=_useState18[0],setOpeningHours=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),businessStatus=_useState20[0],seBusinessStatus=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),gMapURL=_useState22[0],setGMapURL=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),cityID=_useState24[0],setCityID=_useState24[1];// useEffect(()=> {\n//   setSearch(searchInput);\n//   axios.get('/api/Drugstore/?name=' + search).then((result) => {\n//   // axios.get('/api/Drugstore/?name=&city=Austin').then((result) => {\n//     console.log(result)\n//     console.log(result.data);\n//     setData(result.data);\n//     console.log(state.data);\n//   });\n// }, [] )\nvar onSort=function onSort(event,sortKey){var data=state.data;data.sort(function(a,b){return a[sortKey].localeCompare(b[sortKey]);});setState({data:data});};// whatâ€™s being returned\nreturn/*#__PURE__*/ (//form that represents the search bar\nReact.createElement(\"form\",{action:\"/Restaurant\",method:\"post\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"searchInput\",value:search}),/*#__PURE__*/React.createElement(\"button\",null,\"Search!\"))// <label htmlFor=\"search\">Search for a Drugstore</label>\n// <input type=\"text\" value={props.inputValue} \n// <div class = \"grocery-container\">\n//     <table className = \"m-table\">\n//     <thead>\n//       <th onClick = {e => onSort(e, 'name')}> Name </th>\n//       <th onClick = {e => onSort(e, 'address')}>Address</th>\n//       <th onClick = {e => onSort(e, 'businessStatus')}>Business Status</th>\n//       <th onClick = {e => onSort(e, 'gMapURL')}>Google Maps Link</th>\n//       <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n//     </thead>\n//     <tbody>\n//         {/* { data && <td>{data.name}</td> }\n//         { data && <td>{data.address}</td> }\n//         { data && <td>{data.businessStatus}</td> }\n//         { data && <td>{data.gMapURL}</td> }\n//         { data && <td>{data.openingHours}</td> } */}\n//         const drugstores = Information.map(data =>  {\n//           <td>{data.name}</td>\n//           <td>{data.address}</td>\n//           <td>{data.businessStatus}</td>\n//           <td>{data.gMapURL}</td>\n//           <td>{data.openingHours}</td>\n//         })\n//     </tbody>\n//   </table>\n//   <Map\n//       google={props.google}\n//       zoom={8}\n//       style={mapStyles}\n//       initialCenter={{ lat: 47.444, lng: -122.176}}\n//     />\n//   </div>\n);};// class Restaurant extends Component {\n//   constructor (props) {\n//     super(props)\n//     this.state = {data: [] };\n//     this.onSort = this.onSort.bind(this)\n//   }\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//   }\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//     var newdata = this.state.data;\n//     return (\n//       <div class = \"drugstore-container\">\n//       <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}>Name</th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>\n//       </table>\n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div>\n//     );\n//   }\n// }\nGoogleApiWrapper({apiKey:'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'})(Drugstore);export default Drugstore;","map":{"version":3,"sources":["/Users/wankew22/Desktop/covid-fighter/react_ver/src/Drugstore.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","clsx","axios","mapStyles","width","height","Drugstore","props","search","setSearch","data","setData","id","setID","name","setName","address","setAddress","zipcode","setZipcode","latitude","setLatitude","longitude","setLongitude","openingHours","setOpeningHours","businessStatus","seBusinessStatus","gMapURL","setGMapURL","cityID","setCityID","onSort","event","sortKey","state","sort","a","b","localeCompare","setState","apiKey"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,OAASC,GAAT,CAAcC,gBAAd,KAAsC,mBAAtC,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,KADS,CAEhBC,MAAM,CAAE,KAFQ,CAAlB,CAKA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAAyB,eACKb,QAAQ,CAAC,EAAD,CADb,wCAChBc,MADgB,eACRC,SADQ,eACmB;AADnB,eAGCf,QAAQ,EAHT,yCAGhBgB,IAHgB,eAGVC,OAHU,8BAIHjB,QAAQ,CAAC,EAAD,CAJL,yCAIhBkB,EAJgB,eAIZC,KAJY,8BAKCnB,QAAQ,CAAC,EAAD,CALT,yCAKhBoB,IALgB,eAKVC,OALU,8BAMOrB,QAAQ,CAAC,EAAD,CANf,0CAMhBsB,OANgB,gBAMPC,UANO,gCAOOvB,QAAQ,CAAC,EAAD,CAPf,2CAOhBwB,OAPgB,gBAOPC,UAPO,gCAQSzB,QAAQ,CAAC,GAAD,CARjB,2CAQhB0B,QARgB,gBAQNC,WARM,gCASW3B,QAAQ,CAAC,GAAD,CATnB,2CAShB4B,SATgB,gBASLC,YATK,gCAUiB7B,QAAQ,CAAC,EAAD,CAVzB,2CAUhB8B,YAVgB,gBAUFC,eAVE,gCAWoB/B,QAAQ,CAAC,EAAD,CAX5B,2CAWhBgC,cAXgB,gBAWAC,gBAXA,gCAYOjC,QAAQ,CAAC,EAAD,CAZf,2CAYhBkC,OAZgB,gBAYPC,UAZO,gCAaKnC,QAAQ,CAAC,CAAD,CAbb,2CAahBoC,MAbgB,gBAaRC,SAbQ,gBAgBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAQC,OAAR,CAAoB,CACjC,GAAMxB,CAAAA,IAAI,CAAGyB,KAAK,CAACzB,IAAnB,CACAA,IAAI,CAAC0B,IAAL,CAAU,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACH,OAAD,CAAD,CAAWK,aAAX,CAAyBD,CAAC,CAACJ,OAAD,CAA1B,CAAV,EAAV,EACAM,QAAQ,CAAC,CAAC9B,IAAI,CAAJA,IAAD,CAAD,CAAR,CACD,CAJD,CAKA;AACA,oBACE;AACA,4BAAM,MAAM,CAAC,aAAb,CAA2B,MAAM,CAAC,MAAlC,eACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,aAAxB,CAAsC,KAAK,CAAEF,MAA7C,EADF,cAEE,4CAFF,CAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CF,EA6CD,EAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,gBAAgB,CAAC,CACf4C,MAAM,CAAE,yCADO,CAAD,CAAhB,CAEGnC,SAFH,EAGA,cAAeA,CAAAA,SAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\nfunction Drugstore(props){\n  const [search, setSearch] = useState(\"\"); // search is null to start with\n    \n  const [data, setData] = useState();\n  const [id, setID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [zipcode, setZipcode] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [openingHours, setOpeningHours] = useState(\"\");\n  const [businessStatus, seBusinessStatus] = useState(\"\");\n  const [gMapURL, setGMapURL] = useState(\"\");\n  const [cityID, setCityID] = useState(0);\n\n\n  // useEffect(()=> {\n  //   setSearch(searchInput);\n  //   axios.get('/api/Drugstore/?name=' + search).then((result) => {\n  //   // axios.get('/api/Drugstore/?name=&city=Austin').then((result) => {\n  //     console.log(result)\n  //     console.log(result.data);\n  //     setData(result.data);\n  //     console.log(state.data);\n  //   });\n  // }, [] )\n\n  const onSort = (event, sortKey) => {\n    const data = state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n    setState({data})\n  }\n  // whatâ€™s being returned\n  return (\n    //form that represents the search bar\n    <form action=\"/Restaurant\" method=\"post\">\n      <input type=\"text\" name=\"searchInput\" value={search} ></input>\n      <button>Search!</button>\n    </form>\n    // <label htmlFor=\"search\">Search for a Drugstore</label>\n    // <input type=\"text\" value={props.inputValue} \n\n    // <div class = \"grocery-container\">\n    //     <table className = \"m-table\">\n    //     <thead>\n    //       <th onClick = {e => onSort(e, 'name')}> Name </th>\n    //       <th onClick = {e => onSort(e, 'address')}>Address</th>\n    //       <th onClick = {e => onSort(e, 'businessStatus')}>Business Status</th>\n    //       <th onClick = {e => onSort(e, 'gMapURL')}>Google Maps Link</th>\n    //       <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n    //     </thead>\n    //     <tbody>\n    //         {/* { data && <td>{data.name}</td> }\n    //         { data && <td>{data.address}</td> }\n    //         { data && <td>{data.businessStatus}</td> }\n    //         { data && <td>{data.gMapURL}</td> }\n    //         { data && <td>{data.openingHours}</td> } */}\n            \n    //         const drugstores = Information.map(data =>  {\n              \n    //           <td>{data.name}</td>\n    //           <td>{data.address}</td>\n    //           <td>{data.businessStatus}</td>\n    //           <td>{data.gMapURL}</td>\n    //           <td>{data.openingHours}</td>\n              \n    //         })\n            \n    //     </tbody>\n    //   </table>\n    //   <Map\n    //       google={props.google}\n    //       zoom={8}\n    //       style={mapStyles}\n    //       initialCenter={{ lat: 47.444, lng: -122.176}}\n    //     />\n    //   </div>\n  );\n};\n\n// class Restaurant extends Component {\n//   constructor (props) {\n//     super(props)\n//     this.state = {data: [] };\n//     this.onSort = this.onSort.bind(this)\n//   }\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//   }\n\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//     var newdata = this.state.data;\n//     return (\n//       <div class = \"drugstore-container\">\n//       <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}>Name</th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>\n//       </table>\n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div>\n//     );\n//   }\n// }\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Drugstore);\nexport default Drugstore;"]},"metadata":{},"sourceType":"module"}