{"ast":null,"code":"import _slicedToArray from\"/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{Map,GoogleApiWrapper}from\"google-maps-react\";import{Route}from\"react-router-dom\";import{HashRouter}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import clsx from'clsx';import axios from'axios';import ReactDOM from\"react-dom\";import{MDBDataTable}from'mdbreact';var mapStyles={width:'50%',height:'50%'};function Drugstore(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchCity=_useState2[0],setSearchCity=_useState2[1];// search is null to start with\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),searchName=_useState4[0],setSearchName=_useState4[1];//data encapsulates all of the fields below it, so those aren't necessary\nvar _useState5=useState(),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];// const [id, setID] = useState(\"\");\n// const [name, setName] = useState(\"\");\n// const [address, setAddress] = useState(\"\");\n// const [latitude, setLatitude] = useState(0.0);\n// const [longitude, setLongitude] = useState(0.0);\n// const [openingHours, setOpeningHours] = useState(\"\");\n// const [businessStatus, seBusinessStatus] = useState(\"\");\n// const [gMapURL, setGMapURL] = useState(\"\");\nuseEffect(function(){axios.get(getURL()).then(function(result){//axios.get('/api/City/1').then((result) => {\nconsole.log(result);console.log(result.data);// setState({ data: result.data});\nsetData(result.data);});},[]);// useEffect(()=> {\n//   axios.get('/drugstore/?name' + searchName + '=&city=' + searchCity).then((result) => {\n//   // axios.get('/api/Drugstore/?name=&city=Austin').then((result) => {\n//     console.log(\"Hello\");\n//     console.log(result)\n//     console.log(result.data);\n//     setData(result.data);\n//   });\n// }, [] )\n//functions to set the search variable to the input of the form\n// const getCityInput = event => {\n//   setSearchCity(event.target.value);\n//   console.log(searchCity);\n// };\n// const getNameInput = event => {\n//   setSearchName(event.target.value);\n//   console.log(searchName);\n// };\nvar getURL=function getURL(){//var replaceName = searchName.replace(' ', '+');\n//var searchString = '/api/City/?name='.concat(replaceName);\nvar searchString='/api/Drugstore/all/';console.log(searchString);return searchString;};var testData={columns:[{label:'Name',field:'name',sort:'asc',width:150},{label:'Address',field:'address',sort:'asc',width:270},{label:'Opening Hours',field:'opening_hours',sort:'asc',width:150},{label:'Business Status',field:'business_status',sort:'asc',width:150},{label:'Google Maps Url',field:'google_maps_url',// clickEvent: () => this.handleClick(params),\nsort:'asc',width:150}],rows:data};return/*#__PURE__*/React.createElement(MDBDataTable,{striped:true,bordered:true,small:true,data:testData});// const onSort = (event, sortKey) => {\n//   const data = state.data;\n//   data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//   setState({data})\n// }\n// whatâ€™s being returned\n// return (\n//   //form that represents the search bars\n//   <div>\n//     <form action=\"/drugstore\" method=\"post\">\n//       {/* search by city or by name */}\n//       <input type=\"text\" name=\"searchInput\" value={searchCity} onChange={getCityInput} placeholder=\"Search by City\"></input>\n//       <input type=\"text\" name=\"searchInput\" value={searchName} onChange={getNameInput} placeholder=\"Search by Name\"></input>\n//       <button>Search!</button>\n//     </form>\n//   </div>\n// <form action= {getURL()} method=\"post\">\n// {/* search by city name */}\n// <input type=\"text\" name=\"searchInput\" value={searchName} onChange={getNameInput} placeholder=\"Search by City Name\"></input>\n// <button>Search!</button>\n// </form>\n// <div class = \"grocery-container\">\n//     <table className = \"m-table\">\n//     <thead>\n//       <th onClick = {e => onSort(e, 'name')}> Name </th>\n//       <th onClick = {e => onSort(e, 'address')}>Address</th>\n//       <th onClick = {e => onSort(e, 'businessStatus')}>Business Status</th>\n//       <th onClick = {e => onSort(e, 'gMapURL')}>Google Maps Link</th>\n//       <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n//     </thead>\n//     <tbody>\n//         {/* { data && <td>{data.name}</td> }\n//         { data && <td>{data.address}</td> }\n//         { data && <td>{data.businessStatus}</td> }\n//         { data && <td>{data.gMapURL}</td> }\n//         { data && <td>{data.openingHours}</td> } */}\n//         {data.map(item => (\n//           <td>item.name</td>\n//           <td>item.address</td>\n//           <td>item.businessStatus</td>\n//           <td>item.gMapURL</td>\n//           <td>item.openingHours</td>\n//         ))}\n//     </tbody>\n//   </table>\n//   <Map\n//       google={props.google}\n//       zoom={8}\n//       style={mapStyles}\n//       initialCenter={{ lat: 47.444, lng: -122.176}}\n//     />\n//   </div\n};// class Restaurant extends Component {\n//   constructor (props) {\n//     super(props)\n//     this.state = {data: [] };\n//     this.onSort = this.onSort.bind(this)\n//   }\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//   }\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//     var newdata = this.state.data;\n//     return (\n//       <div class = \"drugstore-container\">\n//       <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}>Name</th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>\n//       </table>\n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div>\n//     );\n//   }\n// }\nGoogleApiWrapper({apiKey:'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'})(Drugstore);export default Drugstore;","map":{"version":3,"sources":["/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/src/Drugstore.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","clsx","axios","ReactDOM","MDBDataTable","mapStyles","width","height","Drugstore","props","searchCity","setSearchCity","searchName","setSearchName","data","setData","get","getURL","then","result","console","log","searchString","testData","columns","label","field","sort","rows","apiKey"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,OAASC,GAAT,CAAcC,gBAAd,KAAsC,mBAAtC,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,YAAT,KAA6B,UAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,KADS,CAEhBC,MAAM,CAAE,KAFQ,CAAlB,CAKA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAAyB,eACaf,QAAQ,CAAC,EAAD,CADrB,wCAChBgB,UADgB,eACJC,aADI,eAC2B;AAD3B,eAEajB,QAAQ,CAAC,EAAD,CAFrB,yCAEhBkB,UAFgB,eAEJC,aAFI,eAIvB;AAJuB,eAKCnB,QAAQ,EALT,yCAKhBoB,IALgB,eAKVC,OALU,eAOvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEApB,SAAS,CAAC,UAAK,CACbO,KAAK,CAACc,GAAN,CAAUC,MAAM,EAAhB,EAAoBC,IAApB,CAAyB,SAACC,MAAD,CAAY,CACtC;AACEC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACL,IAAnB,EAEA;AACAC,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP,CACD,CAPA,EASD,CAVQ,CAUN,EAVM,CAAT,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AACA;AACA,GAAIK,CAAAA,YAAY,CAAI,qBAApB,CACAF,OAAO,CAACC,GAAR,CAAYC,YAAZ,EACA,MAAOA,CAAAA,YAAP,CACD,CAND,CAUA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,OAAO,CAAE,CACP,CACEC,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,MAFT,CAGEC,IAAI,CAAE,KAHR,CAIErB,KAAK,CAAE,GAJT,CADO,CAOP,CACEmB,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,SAFT,CAGEC,IAAI,CAAE,KAHR,CAIErB,KAAK,CAAE,GAJT,CAPO,CAaP,CACEmB,KAAK,CAAE,eADT,CAEEC,KAAK,CAAE,eAFT,CAGEC,IAAI,CAAE,KAHR,CAIErB,KAAK,CAAE,GAJT,CAbO,CAmBP,CACEmB,KAAK,CAAE,iBADT,CAEEC,KAAK,CAAE,iBAFT,CAGEC,IAAI,CAAE,KAHR,CAIErB,KAAK,CAAE,GAJT,CAnBO,CAyBP,CACEmB,KAAK,CAAE,iBADT,CAEEC,KAAK,CAAE,iBAFT,CAGC;AACCC,IAAI,CAAE,KAJR,CAKErB,KAAK,CAAE,GALT,CAzBO,CADM,CAkCfsB,IAAI,CAAEd,IAlCS,CAAjB,CAqCA,mBACE,oBAAC,YAAD,EACE,OAAO,KADT,CAEE,QAAQ,KAFV,CAGE,KAAK,KAHP,CAIE,IAAI,CAAES,QAJR,EADF,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,EAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1B,gBAAgB,CAAC,CACfgC,MAAM,CAAE,yCADO,CAAD,CAAhB,CAEGrB,SAFH,EAGA,cAAeA,CAAAA,SAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\nfunction Drugstore(props){\n  const [searchCity, setSearchCity] = useState(\"\"); // search is null to start with\n  const [searchName, setSearchName] = useState(\"\");\n    \n  //data encapsulates all of the fields below it, so those aren't necessary\n  const [data, setData] = useState();\n\n  // const [id, setID] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n  // const [address, setAddress] = useState(\"\");\n  // const [latitude, setLatitude] = useState(0.0);\n  // const [longitude, setLongitude] = useState(0.0);\n  // const [openingHours, setOpeningHours] = useState(\"\");\n  // const [businessStatus, seBusinessStatus] = useState(\"\");\n  // const [gMapURL, setGMapURL] = useState(\"\");\n\n  useEffect(()=> {\n    axios.get(getURL()).then((result) => {\n   //axios.get('/api/City/1').then((result) => {\n     console.log(result)\n     console.log(result.data);\n\n     // setState({ data: result.data});\n     setData(result.data);\n   });\n\n  }, []  )\n\n\n\n  // useEffect(()=> {\n  //   axios.get('/drugstore/?name' + searchName + '=&city=' + searchCity).then((result) => {\n  //   // axios.get('/api/Drugstore/?name=&city=Austin').then((result) => {\n  //     console.log(\"Hello\");\n  //     console.log(result)\n  //     console.log(result.data);\n  //     setData(result.data);\n  //   });\n  // }, [] )\n\n  //functions to set the search variable to the input of the form\n  // const getCityInput = event => {\n  //   setSearchCity(event.target.value);\n  //   console.log(searchCity);\n  // };\n\n  // const getNameInput = event => {\n  //   setSearchName(event.target.value);\n  //   console.log(searchName);\n  // };\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString  = '/api/Drugstore/all/';\n    console.log(searchString);\n    return searchString;\n  }\n\n\n\n  const testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Opening Hours',\n        field: 'opening_hours',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Business Status',\n        field: 'business_status',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Google Maps Url',\n        field: 'google_maps_url',\n       // clickEvent: () => this.handleClick(params),\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={testData}\n    />\n  );\n\n\n  // const onSort = (event, sortKey) => {\n  //   const data = state.data;\n  //   data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n  //   setState({data})\n  // }\n  // whatâ€™s being returned\n  // return (\n  //   //form that represents the search bars\n  //   <div>\n  //     <form action=\"/drugstore\" method=\"post\">\n  //       {/* search by city or by name */}\n  //       <input type=\"text\" name=\"searchInput\" value={searchCity} onChange={getCityInput} placeholder=\"Search by City\"></input>\n  //       <input type=\"text\" name=\"searchInput\" value={searchName} onChange={getNameInput} placeholder=\"Search by Name\"></input>\n  //       <button>Search!</button>\n  //     </form>\n  //   </div>\n\n// <form action= {getURL()} method=\"post\">\n// {/* search by city name */}\n// <input type=\"text\" name=\"searchInput\" value={searchName} onChange={getNameInput} placeholder=\"Search by City Name\"></input>\n// <button>Search!</button>\n// </form>\n\n    // <div class = \"grocery-container\">\n    //     <table className = \"m-table\">\n    //     <thead>\n    //       <th onClick = {e => onSort(e, 'name')}> Name </th>\n    //       <th onClick = {e => onSort(e, 'address')}>Address</th>\n    //       <th onClick = {e => onSort(e, 'businessStatus')}>Business Status</th>\n    //       <th onClick = {e => onSort(e, 'gMapURL')}>Google Maps Link</th>\n    //       <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n    //     </thead>\n    //     <tbody>\n    //         {/* { data && <td>{data.name}</td> }\n    //         { data && <td>{data.address}</td> }\n    //         { data && <td>{data.businessStatus}</td> }\n    //         { data && <td>{data.gMapURL}</td> }\n    //         { data && <td>{data.openingHours}</td> } */}\n\n    //         {data.map(item => (\n    //           <td>item.name</td>\n    //           <td>item.address</td>\n    //           <td>item.businessStatus</td>\n    //           <td>item.gMapURL</td>\n    //           <td>item.openingHours</td>\n    //         ))}\n            \n    //     </tbody>\n    //   </table>\n    //   <Map\n    //       google={props.google}\n    //       zoom={8}\n    //       style={mapStyles}\n    //       initialCenter={{ lat: 47.444, lng: -122.176}}\n    //     />\n    //   </div\n};\n\n// class Restaurant extends Component {\n//   constructor (props) {\n//     super(props)\n//     this.state = {data: [] };\n//     this.onSort = this.onSort.bind(this)\n//   }\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//   }\n\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//     var newdata = this.state.data;\n//     return (\n//       <div class = \"drugstore-container\">\n//       <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}>Name</th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>\n//       </table>\n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div>\n//     );\n//   }\n// }\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Drugstore);\nexport default Drugstore;"]},"metadata":{},"sourceType":"module"}