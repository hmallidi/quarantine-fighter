{"ast":null,"code":"import _slicedToArray from\"/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{Map,GoogleApiWrapper}from\"google-maps-react\";import{Route}from\"react-router-dom\";import{HashRouter}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import clsx from'clsx';import axios from\"axios\";import{MDBDataTable}from'mdbreact';var mapStyles={width:'50%',height:'50%'};// function made from the Grocery class below\nfunction Grocery(props){//variables for search parameters\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchName=_useState2[0],setSearchName=_useState2[1];//variables, change all vars to const or let\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),id=_useState6[0],setID=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),state=_useState10[0],setState=_useState10[1];var _useState11=useState(0.0),_useState12=_slicedToArray(_useState11,2),latitude=_useState12[0],setLatitude=_useState12[1];var _useState13=useState(0.0),_useState14=_slicedToArray(_useState13,2),longitude=_useState14[0],setLongitude=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),popuation=_useState16[0],setPopulation=_useState16[1];useEffect(function(){axios.get(getURL()).then(function(result){//axios.get('/api/City/1').then((result) => {\nconsole.log(result);console.log(result.data);// setState({ data: result.data});\nsetData(result.data);console.log(state.data);});},[]);//stores the input for searching by city name\nvar getNameInput=function getNameInput(event){setSearchName(event.target.value);console.log(searchName);};/*componentDidMount = () => {\n    fetch(\"http://localhost:5000/api/City/1\")\n      .then(function(response) {\n        return response.json();\n      })\n      .then(\n        // items => setState({data: items})\n        items => {setData(items)});\n*/ /*\n    let url = \"http://localhost:5000/\";\n    axios.get(url + 'api/City').then((result) => {\n      console.log(result.data);\n\n      // setState({ data: result.data});\n      setData(result.data);\n      console.log(state.data);\n    });\n    */ // setState({name: state.name});\n//setState(state.name);\nvar onSort=function onSort(event,sortKey){var data=state.data;data.sort(function(a,b){return a[sortKey].localeCompare(b[sortKey]);});setState({data:data});};var getURL=function getURL(){//var replaceName = searchName.replace(' ', '+');\n//var searchString = '/api/City/?name='.concat(replaceName);\nvar searchString='/api/City/all/';console.log(searchString);return searchString;};var testData={columns:[{label:'Name',field:'name',sort:'asc',width:150},{label:'State',field:'state',sort:'asc',width:270},{label:'Latitude',field:'latitude',sort:'asc',width:200},{label:'Longitude',field:'longitude',sort:'asc',width:100},{label:'Population',field:'population',sort:'asc',width:150}],rows:data};return/*#__PURE__*/React.createElement(MDBDataTable,{striped:true,bordered:true,small:true,data:testData});// // what's being returned\n// return (\n//   <div>\n//     {/* Form for searching a city */}\n//     <div class = \"grocery-container\">\n//       <table className = \"m-table\">\n//       <thead>\n//         <th onClick = {e => onSort(e, 'name')}> Name </th>\n//         <th onClick = {e => onSort(e, 'address')}>Address</th>\n//         <th onClick = {e => onSort(e, 'phoneNumber')}>Phone Number</th>\n//         <th onClick = {e => onSort(e, 'website')}>Website</th>\n//         <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n//       </thead>\n//       <tbody>\n//           {data && <td>{data.name}</td>}\n//           {data && <td>{data.id}</td>}\n//           {data && <td>{data.state}</td>}\n//           {data && <td>{data.latitude}</td>}\n//           {data && <td>{data.longitude}</td>}\n//           {data && <td>{data.popuation}</td>}\n//             {\n//             // var values = Object.entries(data);\n//             // for (const [key, value] of values) {\n//             //    setName(values[0]);\n//             //    setID(values[1]);\n//             // }\n//           }\n//       </tbody>\n//     </table>  \n//     <Map\n//         google={props.google}\n//         zoom={8}\n//         style={mapStyles}\n//         initialCenter={{ lat: 47.444, lng: -122.176}}\n//       />\n//     </div>\n//   </div> \n// );\n};//App = GoogleApiWrapper({\n//apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n// class Grocery extends React.Component {\n//   static defaultProps = {\n//     center: {\n//       lat: 59.95,\n//       lng: 30.33\n//     },\n//     zoom: 11\n//   }; \n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       data: [],\n//       city_id: 0,\n//       name: \"\",\n//       state: \"\",\n//       latitude: 0.0,\n//       longitude: 0.0,\n//       population: 0,  \n//     };\n//     this.onSort = this.onSort.bind(this)\n//   }\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//     let url = \"http://localhost:5000/\";\n//     axios.get(url + 'api/City').then((result) => {\n//       console.log(result.data);\n//       this.setState({ data: result.data});\n//       console.log(this.state.data);\n//     });\n//     this.setState({name: this.state.name});\n//   }\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//   // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n//   return (\n//     <div class = \"grocery-container\">\n//         <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}> Name </th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         {/* <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>  */}\n//       </table>  \n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div> \n//   );\n// }\n// }\n//const rootElement = document.getElementById(\"root\");\nexport default Grocery;","map":{"version":3,"sources":["/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/src/City.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","clsx","axios","MDBDataTable","mapStyles","width","height","Grocery","props","searchName","setSearchName","data","setData","id","setID","name","setName","state","setState","latitude","setLatitude","longitude","setLongitude","popuation","setPopulation","get","getURL","then","result","console","log","getNameInput","event","target","value","onSort","sortKey","sort","a","b","localeCompare","searchString","testData","columns","label","field","rows"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,OAASC,GAAT,CAAcC,gBAAd,KAAsC,mBAAtC,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,UAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,KADS,CAEhBC,MAAM,CAAE,KAFQ,CAAlB,CAKA;AACA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAuB,CACrB;AADqB,cAEed,QAAQ,CAAC,EAAD,CAFvB,wCAEde,UAFc,eAEFC,aAFE,eAIrB;AAJqB,eAKGhB,QAAQ,EALX,yCAKdiB,IALc,eAKRC,OALQ,8BAMDlB,QAAQ,CAAC,CAAD,CANP,yCAMdmB,EANc,eAMVC,KANU,8BAOGpB,QAAQ,CAAC,EAAD,CAPX,yCAOdqB,IAPc,eAORC,OAPQ,8BAQKtB,QAAQ,CAAC,EAAD,CARb,0CAQduB,KARc,gBAQPC,QARO,gCASWxB,QAAQ,CAAC,GAAD,CATnB,2CASdyB,QATc,gBASJC,WATI,gCAUa1B,QAAQ,CAAC,GAAD,CAVrB,2CAUd2B,SAVc,gBAUHC,YAVG,gCAWc5B,QAAQ,CAAC,CAAD,CAXtB,2CAWd6B,SAXc,gBAWHC,aAXG,gBAarB7B,SAAS,CAAC,UAAK,CACZO,KAAK,CAACuB,GAAN,CAAUC,MAAM,EAAhB,EAAoBC,IAApB,CAAyB,SAACC,MAAD,CAAY,CACtC;AACEC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACjB,IAAnB,EAEA;AACAC,OAAO,CAACgB,MAAM,CAACjB,IAAR,CAAP,CACAkB,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACN,IAAlB,EACD,CARA,EAUF,CAXQ,CAWN,EAXM,CAAT,CAaA;AACA,GAAMoB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5BtB,aAAa,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,CACAL,OAAO,CAACC,GAAR,CAAYrB,UAAZ,EACD,CAHD,CAMA;;;;;;;;EAjCqB,CA0CvB;;;;;;;;;MA1CuB,CAqDnB;AACA;AAEF,GAAM0B,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACH,KAAD,CAAQI,OAAR,CAAoB,CACjC,GAAMzB,CAAAA,IAAI,CAAGM,KAAK,CAACN,IAAnB,CACAA,IAAI,CAAC0B,IAAL,CAAU,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACF,OAAD,CAAD,CAAWI,aAAX,CAAyBD,CAAC,CAACH,OAAD,CAA1B,CAAV,EAAV,EACAlB,QAAQ,CAAC,CAACP,IAAI,CAAJA,IAAD,CAAD,CAAR,CACD,CAJD,CAMA,GAAMe,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AACA;AACA,GAAIe,CAAAA,YAAY,CAAI,gBAApB,CACAZ,OAAO,CAACC,GAAR,CAAYW,YAAZ,EACA,MAAOA,CAAAA,YAAP,CACD,CAND,CAUA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,OAAO,CAAE,CACP,CACEC,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,MAFT,CAGER,IAAI,CAAE,KAHR,CAIEhC,KAAK,CAAE,GAJT,CADO,CAOP,CACEuC,KAAK,CAAE,OADT,CAEEC,KAAK,CAAE,OAFT,CAGER,IAAI,CAAE,KAHR,CAIEhC,KAAK,CAAE,GAJT,CAPO,CAaP,CACEuC,KAAK,CAAE,UADT,CAEEC,KAAK,CAAE,UAFT,CAGER,IAAI,CAAE,KAHR,CAIEhC,KAAK,CAAE,GAJT,CAbO,CAmBP,CACEuC,KAAK,CAAE,WADT,CAEEC,KAAK,CAAE,WAFT,CAGER,IAAI,CAAE,KAHR,CAIEhC,KAAK,CAAE,GAJT,CAnBO,CAyBP,CACEuC,KAAK,CAAE,YADT,CAEEC,KAAK,CAAE,YAFT,CAGER,IAAI,CAAE,KAHR,CAIEhC,KAAK,CAAE,GAJT,CAzBO,CADM,CAiCfyC,IAAI,CAAEnC,IAjCS,CAAjB,CAoCA,mBACE,ocAAenC,CAAAA,OAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport { MDBDataTable } from 'mdbreact';\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\n// function made from the Grocery class below\nfunction Grocery(props){\n  //variables for search parameters\n  const [searchName, setSearchName] = useState(\"\");\n\n  //variables, change all vars to const or let\n  const [data, setData] = useState();\n  const [id, setID] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [popuation, setPopulation] = useState(0); \n\n  useEffect(()=> {\n     axios.get(getURL()).then((result) => {\n    //axios.get('/api/City/1').then((result) => {\n      console.log(result)\n      console.log(result.data);\n\n      // setState({ data: result.data});\n      setData(result.data);\n      console.log(state.data);\n    });\n\n  }, []  )\n\n  //stores the input for searching by city name\n  const getNameInput = event => {\n    setSearchName(event.target.value);\n    console.log(searchName);\n  };\n\n\n  /*componentDidMount = () => {\n    fetch(\"http://localhost:5000/api/City/1\")\n      .then(function(response) {\n        return response.json();\n      })\n      .then(\n        // items => setState({data: items})\n        items => {setData(items)});\n*/\n/*\n    let url = \"http://localhost:5000/\";\n    axios.get(url + 'api/City').then((result) => {\n      console.log(result.data);\n\n      // setState({ data: result.data});\n      setData(result.data);\n      console.log(state.data);\n    });\n    */\n\n    // setState({name: state.name});\n    //setState(state.name);\n\n  const onSort = (event, sortKey) => {\n    const data = state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n    setState({data})\n  }\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString  = '/api/City/all/';\n    console.log(searchString);\n    return searchString;\n  }\n\n\n\n  const testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'State',\n        field: 'state',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Latitude',\n        field: 'latitude',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Longitude',\n        field: 'longitude',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Population',\n        field: 'population',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={testData}\n    />\n  );\n\n  // // what's being returned\n  // return (\n  //   <div>\n  //     {/* Form for searching a city */}\n\n  //     <div class = \"grocery-container\">\n  //       <table className = \"m-table\">\n  //       <thead>\n  //         <th onClick = {e => onSort(e, 'name')}> Name </th>\n  //         <th onClick = {e => onSort(e, 'address')}>Address</th>\n  //         <th onClick = {e => onSort(e, 'phoneNumber')}>Phone Number</th>\n  //         <th onClick = {e => onSort(e, 'website')}>Website</th>\n  //         <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n  //       </thead>\n  //       <tbody>\n            \n  //           {data && <td>{data.name}</td>}\n  //           {data && <td>{data.id}</td>}\n  //           {data && <td>{data.state}</td>}\n  //           {data && <td>{data.latitude}</td>}\n  //           {data && <td>{data.longitude}</td>}\n  //           {data && <td>{data.popuation}</td>}\n              \n  //             {\n  //             // var values = Object.entries(data);\n              \n  //             // for (const [key, value] of values) {\n  //             //    setName(values[0]);\n  //             //    setID(values[1]);\n  //             // }\n\n  //           }\n          \n  //       </tbody>\n        \n  //     </table>  \n\n  //     <Map\n  //         google={props.google}\n  //         zoom={8}\n  //         style={mapStyles}\n  //         initialCenter={{ lat: 47.444, lng: -122.176}}\n  //       />\n  //     </div>\n  //   </div> \n  // );\n\n};\n\n\n//App = GoogleApiWrapper({\n  //apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n\n\n\n// class Grocery extends React.Component {\n\n//   static defaultProps = {\n//     center: {\n//       lat: 59.95,\n//       lng: 30.33\n//     },\n//     zoom: 11\n//   }; \n  \n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       data: [],\n//       city_id: 0,\n//       name: \"\",\n//       state: \"\",\n//       latitude: 0.0,\n//       longitude: 0.0,\n//       population: 0,  \n//     };\n//     this.onSort = this.onSort.bind(this)\n//   }\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n\n\n//     let url = \"http://localhost:5000/\";\n//     axios.get(url + 'api/City').then((result) => {\n//       console.log(result.data);\n//       this.setState({ data: result.data});\n//       console.log(this.state.data);\n//     });\n\n//     this.setState({name: this.state.name});\n//   }\n\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n\n  \n//   render() {\n//   // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n  \n//   return (\n//     <div class = \"grocery-container\">\n//         <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}> Name </th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n\n//         {/* <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>  */}\n        \n//       </table>  \n\n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div> \n//   );\n// }\n// }\n\n//const rootElement = document.getElementById(\"root\");\nexport default Grocery;\n\n"]},"metadata":{},"sourceType":"module"}