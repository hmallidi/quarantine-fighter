{"ast":null,"code":"var _jsxFileName = \"/Users/wankew22/Desktop/covid-fighter/react_ver/src/Hospital.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\n\nfunction Hospital(props) {\n  const [searchCity, setSearchCity] = useState(\"\"); // search is null to start with\n\n  const [searchName, setSearchName] = useState(\"\"); //data encapsulates all of the fields below it, so those aren't necessary\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    axios.get(getURL()).then(result => {\n      //axios.get('/api/City/1').then((result) => {\n      console.log(result);\n      console.log(result.data);\n\n      for (var index = 0; index < result.data.length; index++) {\n        result.data[index].google_maps_url = /*#__PURE__*/React.createElement(\"a\", {\n          href: result.data[index].google_maps_url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 47\n          }\n        }, \" Open Google Maps \");\n\n        for (var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++) {\n          result.data[index].opening_hours[openingIndex] = /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 60\n            }\n          }, \" \", result.data[index].opening_hours[openingIndex], \" \");\n        }\n      } // setState({ data: result.data});\n\n\n      setData(result.data);\n    });\n  }, []);\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString = '/api/Hospital/all/';\n    console.log(searchString);\n    return searchString;\n  };\n\n  const testData = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Address',\n      field: 'address',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Opening Hours',\n      field: 'opening_hours',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Business Status',\n      field: 'business_status',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Google Maps URL',\n      field: 'google_maps_url',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: data\n  };\n  return /*#__PURE__*/React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: testData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  });\n}\n\n;\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Hospital);\nexport default Hospital;","map":{"version":3,"sources":["/Users/wankew22/Desktop/covid-fighter/react_ver/src/Hospital.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","ReactDOM","MDBDataTable","Hospital","props","searchCity","setSearchCity","searchName","setSearchName","data","setData","get","getURL","then","result","console","log","index","length","google_maps_url","openingIndex","opening_hours","searchString","testData","columns","label","field","sort","width","rows","apiKey"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\n\nfunction Hospital(props){\n  const [searchCity, setSearchCity] = useState(\"\"); // search is null to start with\n  const [searchName, setSearchName] = useState(\"\");\n    \n  //data encapsulates all of the fields below it, so those aren't necessary\n  const [data, setData] = useState();\n\n  useEffect(()=> {\n    axios.get(getURL()).then((result) => {\n   //axios.get('/api/City/1').then((result) => {\n     console.log(result)\n     console.log(result.data);\n\n     for (var index = 0; index < result.data.length; index++) {\n\n        result.data[index].google_maps_url =  <a href={result.data[index].google_maps_url} > Open Google Maps </a>\n        for(var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++){\n          result.data[index].opening_hours[openingIndex] = <li> {result.data[index].opening_hours[openingIndex]} </li>\n        }\n     \n      }\n\n     // setState({ data: result.data});\n     setData(result.data);\n   });\n\n  }, []  )\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString  = '/api/Hospital/all/';\n    console.log(searchString);\n    return searchString;\n  }\n\n\n  const testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Opening Hours',\n        field: 'opening_hours',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Business Status',\n        field: 'business_status',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Google Maps URL',\n        field: 'google_maps_url',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n \n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={testData}\n    />\n  );\n\n};\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Hospital);\nexport default Hospital;"]},"metadata":{},"sourceType":"module"}