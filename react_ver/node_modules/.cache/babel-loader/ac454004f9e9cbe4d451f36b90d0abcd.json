{"ast":null,"code":"var _jsxFileName = \"/Users/angelacao/Desktop/covid-fighter/react_ver/src/City.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport { MDBDataTable } from 'mdbreact';\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n}; // function made from the Grocery class below\n\nfunction Grocery(props) {\n  //variables for search parameters\n  const [searchName, setSearchName] = useState(\"\"); //variables, change all vars to const or let\n\n  const [data, setData] = useState();\n  const [id, setID] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [popuation, setPopulation] = useState(0);\n  useEffect(() => {\n    axios.get(getURL()).then(result => {\n      //axios.get('/api/City/1').then((result) => {\n      console.log(result);\n      console.log(result.data); // setState({ data: result.data});\n\n      setData(result.data);\n      console.log(state.data);\n    });\n  }, []); //stores the input for searching by city name\n\n  const getNameInput = event => {\n    setSearchName(event.target.value);\n    console.log(searchName);\n  };\n  /*componentDidMount = () => {\n    fetch(\"http://localhost:5000/api/City/1\")\n      .then(function(response) {\n        return response.json();\n      })\n      .then(\n        // items => setState({data: items})\n        items => {setData(items)});\n  */\n\n  /*\n      let url = \"http://localhost:5000/\";\n      axios.get(url + 'api/City').then((result) => {\n        console.log(result.data);\n  \n        // setState({ data: result.data});\n        setData(result.data);\n        console.log(state.data);\n      });\n      */\n  // setState({name: state.name});\n  //setState(state.name);\n\n\n  const onSort = (event, sortKey) => {\n    const data = state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n    setState({\n      data\n    });\n  };\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString = '/api/City/all/';\n    console.log(searchString);\n    return searchString;\n  };\n\n  const testData = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'State',\n      field: 'state',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Latitude',\n      field: 'latitude',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Longitude',\n      field: 'longitude',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Population',\n      field: 'population',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: data\n  };\n  return /*#__PURE__*/React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: testData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }); // // what's being returned\n  // return (\n  //   <div>\n  //     {/* Form for searching a city */}\n  //     <div class = \"grocery-container\">\n  //       <table className = \"m-table\">\n  //       <thead>\n  //         <th onClick = {e => onSort(e, 'name')}> Name </th>\n  //         <th onClick = {e => onSort(e, 'address')}>Address</th>\n  //         <th onClick = {e => onSort(e, 'phoneNumber')}>Phone Number</th>\n  //         <th onClick = {e => onSort(e, 'website')}>Website</th>\n  //         <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n  //       </thead>\n  //       <tbody>\n  //           {data && <td>{data.name}</td>}\n  //           {data && <td>{data.id}</td>}\n  //           {data && <td>{data.state}</td>}\n  //           {data && <td>{data.latitude}</td>}\n  //           {data && <td>{data.longitude}</td>}\n  //           {data && <td>{data.popuation}</td>}\n  //             {\n  //             // var values = Object.entries(data);\n  //             // for (const [key, value] of values) {\n  //             //    setName(values[0]);\n  //             //    setID(values[1]);\n  //             // }\n  //           }\n  //       </tbody>\n  //     </table>  \n  //     <Map\n  //         google={props.google}\n  //         zoom={8}\n  //         style={mapStyles}\n  //         initialCenter={{ lat: 47.444, lng: -122.176}}\n  //       />\n  //     </div>\n  //   </div> \n  // );\n}\n\n; //App = GoogleApiWrapper({\n//apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n// class Grocery extends React.Component {\n//   static defaultProps = {\n//     center: {\n//       lat: 59.95,\n//       lng: 30.33\n//     },\n//     zoom: 11\n//   }; \n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       data: [],\n//       city_id: 0,\n//       name: \"\",\n//       state: \"\",\n//       latitude: 0.0,\n//       longitude: 0.0,\n//       population: 0,  \n//     };\n//     this.onSort = this.onSort.bind(this)\n//   }\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//     let url = \"http://localhost:5000/\";\n//     axios.get(url + 'api/City').then((result) => {\n//       console.log(result.data);\n//       this.setState({ data: result.data});\n//       console.log(this.state.data);\n//     });\n//     this.setState({name: this.state.name});\n//   }\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//   // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n//   return (\n//     <div class = \"grocery-container\">\n//         <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}> Name </th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         {/* <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>  */}\n//       </table>  \n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div> \n//   );\n// }\n// }\n//const rootElement = document.getElementById(\"root\");\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(City);\nexport default Grocery;","map":{"version":3,"sources":["/Users/angelacao/Desktop/covid-fighter/react_ver/src/City.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","MDBDataTable","mapStyles","width","height","Grocery","props","searchName","setSearchName","data","setData","id","setID","name","setName","state","setState","latitude","setLatitude","longitude","setLongitude","popuation","setPopulation","get","getURL","then","result","console","log","getNameInput","event","target","value","onSort","sortKey","sort","a","b","localeCompare","searchString","testData","columns","label","field","rows","apiKey","City"],"mappings":"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AE;AAJT,KAnBO,EAyBP;AACEuC,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,KAAK,EAAE,YAFT;AAGER,MAAAA,IAAI,EAAE,KAHR;AAIEhC,MAAAA,KAAK,EAAE;AAJT,KAzBO,CADM;AAiCfyC,IAAAA,IAAI,EAAEnC;AAjCS,GAAjB;AAoCA,sBACE,oBAAC,YAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAE+B,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7GqB,CAsHrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;AAAA,C,CAGD;AACE;AACF;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA9C,gBAAgB,CAAC;AACfmD,EAAAA,MAAM,EAAE;AADO,CAAD,CAAhB,CAEGC,IAFH;AAGA,eAAezC,OAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport { MDBDataTable } from 'mdbreact';\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\n// function made from the Grocery class below\nfunction Grocery(props){\n  //variables for search parameters\n  const [searchName, setSearchName] = useState(\"\");\n\n  //variables, change all vars to const or let\n  const [data, setData] = useState();\n  const [id, setID] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [popuation, setPopulation] = useState(0); \n\n  useEffect(()=> {\n     axios.get(getURL()).then((result) => {\n    //axios.get('/api/City/1').then((result) => {\n\n      console.log(result)\n      console.log(result.data);\n\n      // setState({ data: result.data});\n      setData(result.data);\n      console.log(state.data);\n    });\n\n  }, []  )\n\n  //stores the input for searching by city name\n  const getNameInput = event => {\n    setSearchName(event.target.value);\n    console.log(searchName);\n  };\n\n\n  /*componentDidMount = () => {\n    fetch(\"http://localhost:5000/api/City/1\")\n      .then(function(response) {\n        return response.json();\n      })\n      .then(\n        // items => setState({data: items})\n        items => {setData(items)});\n*/\n/*\n    let url = \"http://localhost:5000/\";\n    axios.get(url + 'api/City').then((result) => {\n      console.log(result.data);\n\n      // setState({ data: result.data});\n      setData(result.data);\n      console.log(state.data);\n    });\n    */\n\n    // setState({name: state.name});\n    //setState(state.name);\n\n  const onSort = (event, sortKey) => {\n    const data = state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n    setState({data})\n  }\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString  = '/api/City/all/';\n    console.log(searchString);\n    return searchString;\n  }\n\n\n\n  const testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'State',\n        field: 'state',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Latitude',\n        field: 'latitude',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Longitude',\n        field: 'longitude',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Population',\n        field: 'population',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={testData}\n    />\n  );\n\n  // // what's being returned\n  // return (\n  //   <div>\n  //     {/* Form for searching a city */}\n\n  //     <div class = \"grocery-container\">\n  //       <table className = \"m-table\">\n  //       <thead>\n  //         <th onClick = {e => onSort(e, 'name')}> Name </th>\n  //         <th onClick = {e => onSort(e, 'address')}>Address</th>\n  //         <th onClick = {e => onSort(e, 'phoneNumber')}>Phone Number</th>\n  //         <th onClick = {e => onSort(e, 'website')}>Website</th>\n  //         <th onClick = {e => onSort(e, 'hours')}>Hours</th>\n  //       </thead>\n  //       <tbody>\n            \n  //           {data && <td>{data.name}</td>}\n  //           {data && <td>{data.id}</td>}\n  //           {data && <td>{data.state}</td>}\n  //           {data && <td>{data.latitude}</td>}\n  //           {data && <td>{data.longitude}</td>}\n  //           {data && <td>{data.popuation}</td>}\n              \n  //             {\n  //             // var values = Object.entries(data);\n              \n  //             // for (const [key, value] of values) {\n  //             //    setName(values[0]);\n  //             //    setID(values[1]);\n  //             // }\n\n  //           }\n          \n  //       </tbody>\n        \n  //     </table>  \n\n  //     <Map\n  //         google={props.google}\n  //         zoom={8}\n  //         style={mapStyles}\n  //         initialCenter={{ lat: 47.444, lng: -122.176}}\n  //       />\n  //     </div>\n  //   </div> \n  // );\n\n};\n\n\n//App = GoogleApiWrapper({\n  //apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n\n\n\n// class Grocery extends React.Component {\n\n//   static defaultProps = {\n//     center: {\n//       lat: 59.95,\n//       lng: 30.33\n//     },\n//     zoom: 11\n//   }; \n  \n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       data: [],\n//       city_id: 0,\n//       name: \"\",\n//       state: \"\",\n//       latitude: 0.0,\n//       longitude: 0.0,\n//       population: 0,  \n//     };\n//     this.onSort = this.onSort.bind(this)\n//   }\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n\n\n//     let url = \"http://localhost:5000/\";\n//     axios.get(url + 'api/City').then((result) => {\n//       console.log(result.data);\n//       this.setState({ data: result.data});\n//       console.log(this.state.data);\n//     });\n\n//     this.setState({name: this.state.name});\n//   }\n\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n\n  \n//   render() {\n//   // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n  \n//   return (\n//     <div class = \"grocery-container\">\n//         <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}> Name </th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n\n//         {/* <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>  */}\n        \n//       </table>  \n\n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div> \n//   );\n// }\n// }\n\n//const rootElement = document.getElementById(\"root\");\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(City);\nexport default Grocery;\n\n"]},"metadata":{},"sourceType":"module"}