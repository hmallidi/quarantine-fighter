{"ast":null,"code":"var _jsxFileName = \"/Users/angelacao/Desktop/covid-fighter/react_ver/src/Drugstore.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\nimport drugstorepic from \"./drugstore.jpg\";\n\nfunction Drugstore(props) {\n  const [searchCity, setSearchCity] = useState(\"\"); // search is null to start with\n\n  const [searchName, setSearchName] = useState(\"\"); //data encapsulates all of the fields below it, so those aren't necessary\n\n  const [data, setData] = useState();\n\n  const updateTable = result => {\n    console.log(result);\n    console.log(result.data);\n\n    for (var index = 0; index < result.data.length; index++) {\n      result.data[index].google_maps_url = /*#__PURE__*/React.createElement(\"a\", {\n        href: result.data[index].google_maps_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 46\n        }\n      }, \" Open Google Maps \");\n\n      for (var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++) {\n        result.data[index].opening_hours[openingIndex] = /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 59\n          }\n        }, \" \", result.data[index].opening_hours[openingIndex], \" \");\n      }\n    }\n\n    setData(result.data);\n  };\n\n  useEffect(() => {\n    console.log(\"Hi inside use effect\");\n    axios.get(getURL()).then(result => {\n      updateTable(result);\n    });\n    axios.post(getURL(), {\n      name: searchName,\n      city: searchCity\n    }).then(function (result) {\n      console.log(result);\n      updateTable(result);\n    });\n  }, []);\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString = '/api/Drugstore/all/';\n    console.log(searchString);\n    return searchString;\n  };\n\n  const testData = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Address',\n      field: 'address',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Opening Hours',\n      field: 'opening_hours',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Business Status',\n      field: 'business_status',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Google Maps URL',\n      field: 'google_maps_url',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: data\n  };\n\n  const getNameInput = event => {\n    setSearchName(event.target.value);\n    console.log(searchName);\n  };\n\n  const getCityInput = event => {\n    setSearchCity(event.target.value);\n    console.log(searchCity);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: drugstorepic,\n    className: \"subpage_img\",\n    alt: \"drugstore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    action: getURL(),\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    value: searchCity,\n    onChange: getCityInput,\n    placeholder: \"Search by City Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: searchName,\n    onChange: getNameInput,\n    placeholder: \"Search by Drugstore Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Search!\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: testData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Drugstore);\nexport default Drugstore;","map":{"version":3,"sources":["/Users/angelacao/Desktop/covid-fighter/react_ver/src/Drugstore.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","ReactDOM","MDBDataTable","drugstorepic","Drugstore","props","searchCity","setSearchCity","searchName","setSearchName","data","setData","updateTable","result","console","log","index","length","google_maps_url","openingIndex","opening_hours","get","getURL","then","post","name","city","searchString","testData","columns","label","field","sort","width","rows","getNameInput","event","target","value","getCityInput","apiKey"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\nimport drugstorepic from \"./drugstore.jpg\"\n\nfunction Drugstore(props){\n  const [searchCity, setSearchCity] = useState(\"\"); // search is null to start with\n  const [searchName, setSearchName] = useState(\"\");\n    \n  //data encapsulates all of the fields below it, so those aren't necessary\n  const [data, setData] = useState();\n\n  const updateTable = (result) => {\n    console.log(result);\n    console.log(result.data);\n\n    for (var index = 0; index < result.data.length; index++) {\n\n       result.data[index].google_maps_url =  <a href={result.data[index].google_maps_url} > Open Google Maps </a>\n       for(var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++){\n         result.data[index].opening_hours[openingIndex] = <li> {result.data[index].opening_hours[openingIndex]} </li>\n       }\n     }\n\n    setData(result.data);\n  }\n\n  useEffect(()=> {\n    console.log(\"Hi inside use effect\");\n    axios.get(getURL()).then((result) => {\n      updateTable(result);\n    });\n \n    axios.post(getURL(), {\n      name: searchName,\n      city: searchCity\n    }).then(function (result) {\n      console.log(result);\n      updateTable(result);\n    })\n  }, []  )\n\n  const getURL = () => {\n    //var replaceName = searchName.replace(' ', '+');\n    //var searchString = '/api/City/?name='.concat(replaceName);\n    var searchString  = '/api/Drugstore/all/';\n    console.log(searchString);\n    return searchString;\n  }\n\n\n  const testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Opening Hours',\n        field: 'opening_hours',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Business Status',\n        field: 'business_status',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Google Maps URL',\n        field: 'google_maps_url',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n  const getNameInput = event => {\n    setSearchName(event.target.value);\n    console.log(searchName);\n  };\n\n  const getCityInput = event => {\n    setSearchCity(event.target.value);\n    console.log(searchCity);\n  };\n\n\n  return (\n    <div>\n      <img src={drugstorepic} className={\"subpage_img\"} alt=\"drugstore\"/>\n\n      <form action={getURL()} method=\"post\">\n        <input type=\"text\" name=\"city\" value={searchCity} onChange={getCityInput} placeholder=\"Search by City Name\"></input>\n        <input type=\"text\" name=\"name\" value={searchName} onChange={getNameInput} placeholder=\"Search by Drugstore Name\"></input>\n        <button>Search!</button>\n      </form>\n\n      <br></br>\n      <br></br>\n      <MDBDataTable\n        striped\n        bordered\n        small\n        data={testData}\n      />\n    </div>\n  );\n\n};\n\nGoogleApiWrapper({\n  apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n})(Drugstore);\nexport default Drugstore;"]},"metadata":{},"sourceType":"module"}