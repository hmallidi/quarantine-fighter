{"ast":null,"code":"var _jsxFileName = \"/Users/angelacao/Desktop/covid-fighter/react_ver/src/Drugstore.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\nimport drugstorepic from \"./drugstore.jpg\";\n\nfunction Drugstore(props) {\n  const [search, setSearch] = useState(\"\"); // search is null to start with\n\n  const [data, setData] = useState();\n  const [originalData, setOriginalData] = useState();\n\n  const updateTable = result => {\n    console.log(result);\n    console.log(result.data);\n\n    for (var index = 0; index < result.data.length; index++) {\n      result.data[index].google_maps_url = /*#__PURE__*/React.createElement(\"a\", {\n        href: result.data[index].google_maps_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 45\n        }\n      }, \" Open Google Maps \");\n\n      for (var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++) {\n        result.data[index].opening_hours[openingIndex] = /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 58\n          }\n        }, \" \", result.data[index].opening_hours[openingIndex], \" \");\n      }\n    }\n\n    setOriginalData(result.data);\n    setData(result.data);\n  };\n\n  useEffect(() => {\n    var urlString = '/api/Drugstore/all/';\n    axios.get(urlString).then(result => {\n      updateTable(result);\n    });\n  }, []);\n  let testData = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Address',\n      field: 'address',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Opening Hours',\n      field: 'opening_hours',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Business Status',\n      field: 'business_status',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Google Maps URL',\n      field: 'google_maps_url',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: data\n  };\n\n  const getUserInput = event => {\n    setSearch(event.target.value);\n    console.log(search);\n    updateSearchTable();\n  };\n\n  const updateSearchTable = () => {\n    let updateData = [];\n\n    if (search === \"\") {\n      setData(originalData);\n    }\n\n    if (search.includes(\" \")) {\n      let words = search.split(\" \");\n\n      for (var index = 0; index < originalData.length; index++) {\n        let wordAdded = true;\n\n        for (var i = 0; i < words.length; i++) {\n          if (!originalData[index].name.toLowerCase().includes(words[i].toLowerCase()) && !originalData[index].address.toLowerCase().includes(words[i].toLowerCase()) && !originalData[index].business_status.toLowerCase().includes(words[i].toLowerCase())) {\n            wordAdded = false;\n          }\n        }\n\n        if (wordAdded) {\n          updateData.push(originalData[index]);\n        }\n      }\n    } else {\n      for (var index = 0; index < originalData.length; index++) {\n        if (originalData[index].name.toLowerCase().includes(search.toLowerCase()) || originalData[index].address.toLowerCase().includes(search.toLowerCase()) || originalData[index].business_status.toLowerCase().includes(search.toLowerCase())) {\n          updateData.push(originalData[index]);\n        }\n      }\n    }\n\n    setData(updateData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: drugstorepic,\n    className: \"subpage_img\",\n    alt: \"drugstore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Drugstores\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"input\",\n    value: search,\n    onChange: getUserInput,\n    placeholder: \"Search by Name, Location, Business Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBDataTable, {\n    striped: true,\n    bordered: true,\n    small: true,\n    data: testData,\n    searching: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nexport default Drugstore;","map":{"version":3,"sources":["/Users/angelacao/Desktop/covid-fighter/react_ver/src/Drugstore.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","ReactDOM","MDBDataTable","drugstorepic","Drugstore","props","search","setSearch","data","setData","originalData","setOriginalData","updateTable","result","console","log","index","length","google_maps_url","openingIndex","opening_hours","urlString","get","then","testData","columns","label","field","sort","width","rows","getUserInput","event","target","value","updateSearchTable","updateData","includes","words","split","wordAdded","i","name","toLowerCase","address","business_status","push","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC,CADuB,CACmB;;AAC1C,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,EAAhD;;AAEA,QAAMqB,WAAW,GAAIC,MAAD,IAAY;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACL,IAAnB;;AAEA,SAAK,IAAIQ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,MAAM,CAACL,IAAP,CAAYS,MAAxC,EAAgDD,KAAK,EAArD,EAAyD;AAEvDH,MAAAA,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBE,eAAnB,gBAAsC;AAAG,QAAA,IAAI,EAAEL,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBE,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAtC;;AACA,WAAI,IAAIC,YAAY,GAAG,CAAvB,EAA0BA,YAAY,GAAGN,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBI,aAAnB,CAAiCH,MAA1E,EAAkFE,YAAY,EAA9F,EAAiG;AAC/FN,QAAAA,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBI,aAAnB,CAAiCD,YAAjC,iBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAMN,MAAM,CAACL,IAAP,CAAYQ,KAAZ,EAAmBI,aAAnB,CAAiCD,YAAjC,CAAN,MAAjD;AACD;AAEF;;AAEFR,IAAAA,eAAe,CAACE,MAAM,CAACL,IAAR,CAAf;AACAC,IAAAA,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP;AAEA,GAhBD;;AAkBAhB,EAAAA,SAAS,CAAC,MAAK;AACb,QAAI6B,SAAS,GAAG,qBAAhB;AAEArB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,SAAV,EAAqBE,IAArB,CAA2BV,MAAD,IAAY;AACpCD,MAAAA,WAAW,CAACC,MAAD,CAAX;AACD,KAFD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,MAAIW,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KADO,EAOP;AACEH,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAPO,EAaP;AACEH,MAAAA,KAAK,EAAE,eADT;AAEEC,MAAAA,KAAK,EAAE,eAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAbO,EAmBP;AACEH,MAAAA,KAAK,EAAE,iBADT;AAEEC,MAAAA,KAAK,EAAE,iBAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAnBO,EAyBP;AACEH,MAAAA,KAAK,EAAE,iBADT;AAEEC,MAAAA,KAAK,EAAE,iBAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAzBO,CADI;AAiCbC,IAAAA,IAAI,EAAEtB;AAjCO,GAAf;;AAqCA,QAAMuB,YAAY,GAAGC,KAAK,IAAI;AAC5BzB,IAAAA,SAAS,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA6B,IAAAA,iBAAiB;AAClB,GAJD;;AAMA,QAAMA,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAG9B,MAAM,KAAK,EAAd,EAAiB;AACfG,MAAAA,OAAO,CAACC,YAAD,CAAP;AACD;;AACD,QAAGJ,MAAM,CAAC+B,QAAP,CAAgB,GAAhB,CAAH,EAAwB;AACtB,UAAIC,KAAK,GAAGhC,MAAM,CAACiC,KAAP,CAAa,GAAb,CAAZ;;AAEE,WAAK,IAAIvB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,YAAY,CAACO,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,YAAIwB,SAAS,GAAG,IAAhB;;AAEA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,KAAK,CAACrB,MAAzB,EAAiCwB,CAAC,EAAlC,EAAqC;AACnC,cAAG,CAAE/B,YAAY,CAACM,KAAD,CAAZ,CAAoB0B,IAApB,CAAyBC,WAAzB,GAAuCN,QAAvC,CAAgDC,KAAK,CAACG,CAAD,CAAL,CAASE,WAAT,EAAhD,CAAF,IAA8E,CAAEjC,YAAY,CAACM,KAAD,CAAZ,CAAoB4B,OAApB,CAA4BD,WAA5B,GAA0CN,QAA1C,CAAmDC,KAAK,CAACG,CAAD,CAAL,CAASE,WAAT,EAAnD,CAAhF,IACC,CAAEjC,YAAY,CAACM,KAAD,CAAZ,CAAoB6B,eAApB,CAAoCF,WAApC,GAAkDN,QAAlD,CAA2DC,KAAK,CAACG,CAAD,CAAL,CAASE,WAAT,EAA3D,CADN,EAC0F;AACxFH,YAAAA,SAAS,GAAG,KAAZ;AACD;AACF;;AAED,YAAGA,SAAH,EAAa;AACXJ,UAAAA,UAAU,CAACU,IAAX,CAAgBpC,YAAY,CAACM,KAAD,CAA5B;AACD;AACF;AACJ,KAjBD,MAkBI;AACF,WAAK,IAAIA,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,YAAY,CAACO,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,YAAGN,YAAY,CAACM,KAAD,CAAZ,CAAoB0B,IAApB,CAAyBC,WAAzB,GAAuCN,QAAvC,CAAgD/B,MAAM,CAACqC,WAAP,EAAhD,KAAyEjC,YAAY,CAACM,KAAD,CAAZ,CAAoB4B,OAApB,CAA4BD,WAA5B,GAA0CN,QAA1C,CAAmD/B,MAAM,CAACqC,WAAP,EAAnD,CAAzE,IACAjC,YAAY,CAACM,KAAD,CAAZ,CAAoB6B,eAApB,CAAoCF,WAApC,GAAkDN,QAAlD,CAA2D/B,MAAM,CAACqC,WAAP,EAA3D,CADH,EACqF;AAEjFP,UAAAA,UAAU,CAACU,IAAX,CAAgBpC,YAAY,CAACM,KAAD,CAA5B;AACH;AACF;AACF;;AAEDP,IAAAA,OAAO,CAAC2B,UAAD,CAAP;AAED,GApCD;;AAsCA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEjC,YAAV;AAAwB,IAAA,SAAS,EAAE,aAAnC;AAAkD,IAAA,GAAG,EAAC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAE4C,CAAC,IAAI;AAAEA,MAAAA,CAAC,CAACC,cAAF;AAAqB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE1C,MAAvC;AAA+C,IAAA,QAAQ,EAAEyB,YAAzD;AAAuE,IAAA,WAAW,EAAC,2CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CAbF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAsBE,oBAAC,YAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAEP,QAJR;AAKE,IAAA,SAAS,EAAE,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AAkCD;;AAAA;AAED,eAAepB,SAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\nimport drugstorepic from \"./drugstore.jpg\"\n\nfunction Drugstore(props){\n  const [search, setSearch] = useState(\"\"); // search is null to start with\n  const [data, setData] = useState(); \n  const [originalData, setOriginalData] = useState();\n\n  const updateTable = (result) => {\n    console.log(result);\n    console.log(result.data);\n    \n    for (var index = 0; index < result.data.length; index++) {\n\n      result.data[index].google_maps_url =  <a href={result.data[index].google_maps_url} > Open Google Maps </a>\n      for(var openingIndex = 0; openingIndex < result.data[index].opening_hours.length; openingIndex++){\n        result.data[index].opening_hours[openingIndex] = <li> {result.data[index].opening_hours[openingIndex]} </li>\n      }\n   \n    }\n\n   setOriginalData(result.data);\n   setData(result.data);\n\n  }\n\n  useEffect(()=> {\n    var urlString = '/api/Drugstore/all/';\n    \n    axios.get(urlString).then((result) => {\n      updateTable(result);\n    });\n \n  }, []  )\n\n  let testData = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Opening Hours',\n        field: 'opening_hours',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'Business Status',\n        field: 'business_status',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Google Maps URL',\n        field: 'google_maps_url',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: data\n  };\n\n \n  const getUserInput = event => {\n    setSearch(event.target.value);\n    console.log(search);\n    updateSearchTable();\n  };\n\n  const updateSearchTable = () => {\n    let updateData = [];\n   \n    if(search === \"\"){\n      setData(originalData);\n    }\n    if(search.includes(\" \")){\n      let words = search.split(\" \");\n\n        for (var index = 0; index < originalData.length; index++) {\n          let wordAdded = true;\n\n          for(var i = 0; i < words.length; i++){\n            if(!(originalData[index].name.toLowerCase().includes(words[i].toLowerCase())) && !(originalData[index].address.toLowerCase().includes(words[i].toLowerCase())) && \n                !(originalData[index].business_status.toLowerCase().includes(words[i].toLowerCase()))){\n              wordAdded = false;\n            }\n          }\n          \n          if(wordAdded){\n            updateData.push(originalData[index]);\n          }\n        }\n    }\n    else{\n      for (var index = 0; index < originalData.length; index++) {\n        if(originalData[index].name.toLowerCase().includes(search.toLowerCase()) || originalData[index].address.toLowerCase().includes(search.toLowerCase()) ||\n          (originalData[index].business_status.toLowerCase().includes(search.toLowerCase()))){\n          \n            updateData.push(originalData[index]);\n        }\n      }\n    }\n  \n    setData(updateData);\n\n  }; \n   \n  return (\n    <div>\n      <img src={drugstorepic} className={\"subpage_img\"} alt=\"drugstore\"/>\n\n      <br></br>\n      <br></br>\n\n      <center>\n          <h2>Drugstores</h2>\n      </center>\n\n      <br></br>\n      <br></br>\n\n      <center>\n        <form onSubmit={e => { e.preventDefault(); }}>\n        <input type=\"text\" name=\"input\" value={search} onChange={getUserInput} placeholder=\"Search by Name, Location, Business Status\"></input>\n      </form>\n      </center>\n\n      \n      <br></br>\n\n      <MDBDataTable\n        striped\n        bordered\n        small\n        data={testData}\n        searching={false}\n      />\n\n    </div>\n  );\n\n};\n\nexport default Drugstore;"]},"metadata":{},"sourceType":"module"}