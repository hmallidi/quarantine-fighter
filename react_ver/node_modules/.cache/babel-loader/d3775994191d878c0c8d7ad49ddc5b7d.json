{"ast":null,"code":"var _jsxFileName = \"/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/src/Grocery.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\nclass Grocery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      city_id: 0,\n      name: \"\",\n      state: \"\",\n      latitude: 0.0,\n      longitude: 0.0,\n      population: 0\n    };\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/api/City/1\").then(function (response) {\n      return response.json();\n    }).then(items => this.setState({\n      data: items\n    }));\n    let url = \"http://localhost:5000/\";\n    axios.get(url + 'api/City').then(result => {\n      console.log(result.data);\n      this.setState({\n        data: result.data\n      });\n      console.log(this.state.data);\n    });\n    this.setState({\n      name: this.state.name\n    });\n  }\n\n  onSort(event, sortKey) {\n    const data = this.state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n    this.setState({\n      data\n    });\n  } // Option 1\n\n\n  getCities() {\n    var cityList;\n    const path = 'http://localhost:5000/api/City/1';\n    axios.get(path).then(response => {\n      this.cityList = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"grocery-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"m-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      onClick: e => this.onSort(e, 'name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \" \", this.state.name, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: e => this.onSort(e, 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: e => this.onSort(e, 'phoneNumber'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: e => this.onSort(e, 'website'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Website\"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: e => this.onSort(e, 'hours'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Hours\"))), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }));\n  }\n\n} //App = GoogleApiWrapper({\n//apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n\n\nGrocery.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\nconst rootElement = document.getElementById(\"root\");\nexport default Grocery;","map":{"version":3,"sources":["/Users/pranavvaranasi/Desktop/swe/covid-fighter/react_ver/src/Grocery.js"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","mapStyles","width","height","Grocery","constructor","props","state","data","city_id","name","latitude","longitude","population","onSort","bind","componentDidMount","fetch","then","response","json","items","setState","url","get","result","console","log","event","sortKey","sort","a","b","localeCompare","getCities","cityList","path","catch","error","render","e","google","lat","lng","defaultProps","center","zoom","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\nclass Grocery extends React.Component {\n\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  }; \n  \n  constructor (props) {\n    super(props)\n    this.state = {\n      data: [],\n      city_id: 0,\n      name: \"\",\n      state: \"\",\n      latitude: 0.0,\n      longitude: 0.0,\n      population: 0,  \n    };\n    this.onSort = this.onSort.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/api/City/1\")\n      .then(function(response) {\n        return response.json();\n      })\n      .then(items => this.setState({data: items}));\n\n\n    let url = \"http://localhost:5000/\";\n    axios.get(url + 'api/City').then((result) => {\n      console.log(result.data);\n      this.setState({ data: result.data});\n      console.log(this.state.data);\n    });\n\n    this.setState({name: this.state.name});\n  }\n\n  onSort(event, sortKey) {\n    const data = this.state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n    this.setState({data})\n  }\n\n  // Option 1\n  getCities(){\n    var cityList;\n    const path = 'http://localhost:5000/api/City/1'\n    axios.get(path)\n    .then(response => {this.cityList = response.data})\n    .catch(error => {\n      console.log(error)\n    })\n  }\n  \n  render() {\n  // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n  \n  return (\n    <div class = \"grocery-container\">\n        <table className = \"m-table\">\n        <thead>\n          <th onClick = {e => this.onSort(e, 'name')}> {this.state.name} </th>\n          <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n          <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n          <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n          <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n        </thead>\n\n        {/* <tbody>\n          {newdata.map(function(hospital, index) {\n            return (\n              <tr key={index} data-item={hospital}>\n                <td data-title=\"Name\">{hospital.name}</td>\n                <td data-title=\"Address\">{hospital.address}</td>\n                <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n                <td data-title=\"Website\">{hospital.website}</td>\n                <td data-title=\"Hours\">{hospital.hours}</td>\n              </tr>\n            );\n          })}\n        </tbody>  */}\n        \n      </table>  \n\n      <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: 47.444, lng: -122.176}}\n        />\n      </div> \n  );\n}\n}\n\n//App = GoogleApiWrapper({\n  //apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n\nconst rootElement = document.getElementById(\"root\");\nexport default Grocery;"]},"metadata":{},"sourceType":"module"}