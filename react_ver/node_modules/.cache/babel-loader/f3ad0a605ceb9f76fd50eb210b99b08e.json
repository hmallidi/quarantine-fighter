{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nayan\\\\College\\\\Summer2020\\\\SWE\\\\covid-fighter\\\\react_ver\\\\src\\\\City.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n}; // function made from the Grocery class below\n\nfunction Grocery(props) {\n  //variables for search parameters\n  const [searchID, setSearchID] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\"); //variables, change all vars to const or let\n\n  const [data, setData] = useState();\n  const [id, setID] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [popuation, setPopulation] = useState(0);\n  useEffect(() => {\n    axios.get('/api/City/' + searchID).then(result => {\n      // axios.get('/api/City/1').then((result) => {\n      console.log(result);\n      console.log(result.data); // setState({ data: result.data});\n\n      setData(result.data);\n      console.log(state.data);\n    });\n  }, []); //stores the input for searching by city id\n\n  const getIDInput = event => {\n    setSearchID(event.target.value);\n    console.log(searchID);\n  }; //stores the input for searching by city name\n\n\n  const getNameInput = event => {\n    setSearchName(event.target.value);\n    console.log(searchName);\n  };\n  /*componentDidMount = () => {\r\n    fetch(\"http://localhost:5000/api/City/1\")\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        // items => setState({data: items})\r\n        items => {setData(items)});\r\n  */\n\n  /*\r\n      let url = \"http://localhost:5000/\";\r\n      axios.get(url + 'api/City').then((result) => {\r\n        console.log(result.data);\r\n  \r\n        // setState({ data: result.data});\r\n        setData(result.data);\r\n        console.log(state.data);\r\n      });\r\n      */\n  // setState({name: state.name});\n  //setState(state.name);\n\n\n  const onSort = (event, sortKey) => {\n    const data = state.data;\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n    setState({\n      data\n    });\n  }; // what's being returned\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"/drugstore\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"searchInput\",\n    value: searchID,\n    onChange: getIDInput,\n    placeholder: \"Search by City ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"searchInput\",\n    value: searchName,\n    onChange: getNameInput,\n    placeholder: \"Search by City Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Search!\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"m-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    onClick: e => onSort(e, 'name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \" Name \"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: e => onSort(e, 'address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: e => onSort(e, 'phoneNumber'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: e => onSort(e, 'website'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Website\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: e => onSort(e, 'hours'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Hours\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, data && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 22\n    }\n  }, data.name), data && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 22\n    }\n  }, data.id), data && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }\n  }, data.state), data && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 22\n    }\n  }, data.latitude), data && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 22\n    }\n  }, data.longitude), data && /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 22\n    }\n  }, data.popuation))), /*#__PURE__*/React.createElement(Map, {\n    google: props.google,\n    zoom: 8,\n    style: mapStyles,\n    initialCenter: {\n      lat: 47.444,\n      lng: -122.176\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  })));\n}\n\n; //App = GoogleApiWrapper({\n//apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\n//})(App);\n// class Grocery extends React.Component {\n//   static defaultProps = {\n//     center: {\n//       lat: 59.95,\n//       lng: 30.33\n//     },\n//     zoom: 11\n//   }; \n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       data: [],\n//       city_id: 0,\n//       name: \"\",\n//       state: \"\",\n//       latitude: 0.0,\n//       longitude: 0.0,\n//       population: 0,  \n//     };\n//     this.onSort = this.onSort.bind(this)\n//   }\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api/City/1\")\n//       .then(function(response) {\n//         return response.json();\n//       })\n//       .then(items => this.setState({data: items}));\n//     let url = \"http://localhost:5000/\";\n//     axios.get(url + 'api/City').then((result) => {\n//       console.log(result.data);\n//       this.setState({ data: result.data});\n//       console.log(this.state.data);\n//     });\n//     this.setState({name: this.state.name});\n//   }\n//   onSort(event, sortKey) {\n//     const data = this.state.data;\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n//     this.setState({data})\n//   }\n//   render() {\n//   // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \n//   return (\n//     <div class = \"grocery-container\">\n//         <table className = \"m-table\">\n//         <thead>\n//           <th onClick = {e => this.onSort(e, 'name')}> Name </th>\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\n//         </thead>\n//         {/* <tbody>\n//           {newdata.map(function(hospital, index) {\n//             return (\n//               <tr key={index} data-item={hospital}>\n//                 <td data-title=\"Name\">{hospital.name}</td>\n//                 <td data-title=\"Address\">{hospital.address}</td>\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\n//                 <td data-title=\"Website\">{hospital.website}</td>\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\n//               </tr>\n//             );\n//           })}\n//         </tbody>  */}\n//       </table>  \n//       <Map\n//           google={this.props.google}\n//           zoom={8}\n//           style={mapStyles}\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\n//         />\n//       </div> \n//   );\n// }\n// }\n//const rootElement = document.getElementById(\"root\");\n\nexport default Grocery;","map":{"version":3,"sources":["C:/Nayan/College/Summer2020/SWE/covid-fighter/react_ver/src/City.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","PropTypes","clsx","axios","mapStyles","width","height","Grocery","props","searchID","setSearchID","searchName","setSearchName","data","setData","id","setID","name","setName","state","setState","latitude","setLatitude","longitude","setLongitude","popuation","setPopulation","get","then","result","console","log","getIDInput","event","target","value","getNameInput","onSort","sortKey","sort","a","b","localeCompare","e","google","lat","lng"],"mappings":"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ALb,EAMKR,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACU,SAAV,CANb,EAOKV,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACY,SAAV,CAPb,CARA,CADJ,eAgCE,oBAAC,GAAD;AACI,IAAA,MAAM,EAAEjB,KAAK,CAACoC,MADlB;AAEI,IAAA,IAAI,EAAE,CAFV;AAGI,IAAA,KAAK,EAAExC,SAHX;AAII,IAAA,aAAa,EAAE;AAAEyC,MAAAA,GAAG,EAAE,MAAP;AAAeC,MAAAA,GAAG,EAAE,CAAC;AAArB,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CARA,CADF;AAmDD;;AAAA,C,CAGD;AACE;AACF;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,eAAevC,OAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport axios from \"axios\";\r\n\r\nconst mapStyles = {\r\n  width: '50%',\r\n  height: '50%'\r\n};\r\n\r\n// function made from the Grocery class below\r\nfunction Grocery(props){\r\n  //variables for search parameters\r\n  const [searchID, setSearchID] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n\r\n  //variables, change all vars to const or let\r\n  const [data, setData] = useState();\r\n  const [id, setID] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(0.0);\r\n  const [longitude, setLongitude] = useState(0.0);\r\n  const [popuation, setPopulation] = useState(0); \r\n\r\n  useEffect(()=> {\r\n    axios.get('/api/City/' + searchID).then((result) => {\r\n    // axios.get('/api/City/1').then((result) => {\r\n      console.log(result)\r\n      console.log(result.data);\r\n\r\n      // setState({ data: result.data});\r\n      setData(result.data);\r\n      console.log(state.data);\r\n    });\r\n\r\n  }, []  )\r\n\r\n  //stores the input for searching by city id\r\n  const getIDInput = event => {\r\n    setSearchID(event.target.value);\r\n    console.log(searchID);\r\n  };\r\n\r\n  //stores the input for searching by city name\r\n  const getNameInput = event => {\r\n    setSearchName(event.target.value);\r\n    console.log(searchName);\r\n  };\r\n\r\n\r\n  \r\n\r\n  /*componentDidMount = () => {\r\n    fetch(\"http://localhost:5000/api/City/1\")\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        // items => setState({data: items})\r\n        items => {setData(items)});\r\n*/\r\n/*\r\n    let url = \"http://localhost:5000/\";\r\n    axios.get(url + 'api/City').then((result) => {\r\n      console.log(result.data);\r\n\r\n      // setState({ data: result.data});\r\n      setData(result.data);\r\n      console.log(state.data);\r\n    });\r\n    */\r\n\r\n    // setState({name: state.name});\r\n    //setState(state.name);\r\n\r\n  const onSort = (event, sortKey) => {\r\n    const data = state.data;\r\n    data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\r\n    setState({data})\r\n  }\r\n\r\n  // what's being returned\r\n  return (\r\n    <div>\r\n      <form action=\"/drugstore\" method=\"post\">\r\n        {/* search by city or by name */}\r\n        <input type=\"text\" name=\"searchInput\" value={searchID} onChange={getIDInput} placeholder=\"Search by City ID\"></input>\r\n        <input type=\"text\" name=\"searchInput\" value={searchName} onChange={getNameInput} placeholder=\"Search by City Name\"></input>\r\n        <button>Search!</button>\r\n      </form>\r\n\r\n    <div class = \"grocery-container\">\r\n        <table className = \"m-table\">\r\n        <thead>\r\n          <th onClick = {e => onSort(e, 'name')}> Name </th>\r\n          <th onClick = {e => onSort(e, 'address')}>Address</th>\r\n          <th onClick = {e => onSort(e, 'phoneNumber')}>Phone Number</th>\r\n          <th onClick = {e => onSort(e, 'website')}>Website</th>\r\n          <th onClick = {e => onSort(e, 'hours')}>Hours</th>\r\n        </thead>\r\n        <tbody>\r\n            \r\n            {data && <td>{data.name}</td>}\r\n            {data && <td>{data.id}</td>}\r\n            {data && <td>{data.state}</td>}\r\n            {data && <td>{data.latitude}</td>}\r\n            {data && <td>{data.longitude}</td>}\r\n            {data && <td>{data.popuation}</td>}\r\n              \r\n              {\r\n              // var values = Object.entries(data);\r\n              \r\n              // for (const [key, value] of values) {\r\n              //    setName(values[0]);\r\n              //    setID(values[1]);\r\n              // }\r\n\r\n            }\r\n          \r\n        </tbody>\r\n        \r\n      </table>  \r\n\r\n      <Map\r\n          google={props.google}\r\n          zoom={8}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 47.444, lng: -122.176}}\r\n        />\r\n      </div>\r\n    </div> \r\n  );\r\n\r\n};\r\n\r\n\r\n//App = GoogleApiWrapper({\r\n  //apiKey: 'AIzaSyAYVNrhNbNDCs08puZcbPtPfXXj1sH61x8'\r\n//})(App);\r\n\r\n\r\n\r\n// class Grocery extends React.Component {\r\n\r\n//   static defaultProps = {\r\n//     center: {\r\n//       lat: 59.95,\r\n//       lng: 30.33\r\n//     },\r\n//     zoom: 11\r\n//   }; \r\n  \r\n//   constructor (props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       data: [],\r\n//       city_id: 0,\r\n//       name: \"\",\r\n//       state: \"\",\r\n//       latitude: 0.0,\r\n//       longitude: 0.0,\r\n//       population: 0,  \r\n//     };\r\n//     this.onSort = this.onSort.bind(this)\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     fetch(\"http://localhost:5000/api/City/1\")\r\n//       .then(function(response) {\r\n//         return response.json();\r\n//       })\r\n//       .then(items => this.setState({data: items}));\r\n\r\n\r\n//     let url = \"http://localhost:5000/\";\r\n//     axios.get(url + 'api/City').then((result) => {\r\n//       console.log(result.data);\r\n//       this.setState({ data: result.data});\r\n//       console.log(this.state.data);\r\n//     });\r\n\r\n//     this.setState({name: this.state.name});\r\n//   }\r\n\r\n//   onSort(event, sortKey) {\r\n//     const data = this.state.data;\r\n//     data.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\r\n//     this.setState({data})\r\n//   }\r\n\r\n  \r\n//   render() {\r\n//   // Option 1: var data = this.getCities()   <th onClick = {e => this.onSort(e, 'name')}>{{data}}</th> \r\n  \r\n//   return (\r\n//     <div class = \"grocery-container\">\r\n//         <table className = \"m-table\">\r\n//         <thead>\r\n//           <th onClick = {e => this.onSort(e, 'name')}> Name </th>\r\n//           <th onClick = {e => this.onSort(e, 'address')}>Address</th>\r\n//           <th onClick = {e => this.onSort(e, 'phoneNumber')}>Phone Number</th>\r\n//           <th onClick = {e => this.onSort(e, 'website')}>Website</th>\r\n//           <th onClick = {e => this.onSort(e, 'hours')}>Hours</th>\r\n//         </thead>\r\n\r\n//         {/* <tbody>\r\n//           {newdata.map(function(hospital, index) {\r\n//             return (\r\n//               <tr key={index} data-item={hospital}>\r\n//                 <td data-title=\"Name\">{hospital.name}</td>\r\n//                 <td data-title=\"Address\">{hospital.address}</td>\r\n//                 <td data-title=\"Phone Number\">{hospital.phoneNumber}</td>\r\n//                 <td data-title=\"Website\">{hospital.website}</td>\r\n//                 <td data-title=\"Hours\">{hospital.hours}</td>\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>  */}\r\n        \r\n//       </table>  \r\n\r\n//       <Map\r\n//           google={this.props.google}\r\n//           zoom={8}\r\n//           style={mapStyles}\r\n//           initialCenter={{ lat: 47.444, lng: -122.176}}\r\n//         />\r\n//       </div> \r\n//   );\r\n// }\r\n// }\r\n\r\n//const rootElement = document.getElementById(\"root\");\r\nexport default Grocery;\r\n\r\n"]},"metadata":{},"sourceType":"module"}