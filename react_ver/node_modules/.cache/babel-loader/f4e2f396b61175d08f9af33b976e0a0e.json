{"ast":null,"code":"import _slicedToArray from\"/Users/harimallidi/Desktop/cs373/cs373_website/covid-fighter/react_ver/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{Map,GoogleApiWrapper}from\"google-maps-react\";import{Route}from\"react-router-dom\";import{HashRouter}from\"react-router-dom\";import{NavLink}from\"react-router-dom\";import clsx from'clsx';import axios from\"axios\";import citypic from\"./citypic.jpg\";import{MDBDataTable}from'mdbreact';import\"./subpage.css\";// function made from the Grocery class below\nfunction City(props){//variables for search parameters\n// const [search, setSearch] = useState(\"\");\n//variables, change all vars to const or let\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),originalData=_useState4[0],setOriginalData=_useState4[1];useEffect(function(){var searchString='/api/City/all/';axios.get(searchString).then(function(result){for(var index=0;index<result.data.length;index++){result.data[index].latitude=result.data[index].latitude.toString();result.data[index].longitude=result.data[index].longitude.toString();result.data[index].population=result.data[index].population.toString();}setOriginalData(result.data);setData(result.data);});},[]);var testData={columns:[{label:'Name',field:'name',sort:'asc',width:150},{label:'State',field:'state',sort:'asc',width:270},{label:'Latitude',field:'latitude',sort:'asc',width:200},{label:'Longitude',field:'longitude',sort:'asc',width:100},{label:'Population',field:'population',sort:'asc',width:150}],rows:data};var getUserInput=function getUserInput(event){console.log(event.target.value);setSearch(event.target.value);updateSearchTable(event.target.value);};var updateSearchTable=function updateSearchTable(search){var updateData=[];if(search===\"\"){setData(originalData);}if(search.includes(\" \")){var words=search.split(\" \");for(var index=0;index<originalData.length;index++){var wordAdded=true;for(var i=0;i<words.length;i++){if(!originalData[index].name.toLowerCase().includes(words[i].toLowerCase())&&!originalData[index].state.toLowerCase().includes(words[i].toLowerCase())&&!originalData[index].latitude.toLowerCase().includes(words[i].toLowerCase())&&!originalData[index].longitude.toLowerCase().includes(words[i].toLowerCase())&&!originalData[index].population.toLowerCase().includes(words[i].toLowerCase())){wordAdded=false;}}if(wordAdded){updateData.push(originalData[index]);}}}else{for(var index=0;index<originalData.length;index++){if(originalData[index].name.toLowerCase().includes(search.toLowerCase())||originalData[index].state.toLowerCase().includes(search.toLowerCase())||originalData[index].latitude.toLowerCase().includes(search.toLowerCase())||originalData[index].longitude.toLowerCase().includes(search.toLowerCase())||originalData[index].population.toLowerCase().includes(search.toLowerCase())){updateData.push(originalData[index]);}}}setData(updateData);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:citypic,className:\"subpage_img\",alt:\"city\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Cities\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"input\",value:search,onChange:getUserInput,placeholder:\"Search by Name, State, Latitude, Longitude, Population\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(MDBDataTable,{striped:true,bordered:true,small:true,data:testData,searching:false}));};export default City;","map":{"version":3,"sources":["/Users/harimallidi/Desktop/cs373/cs373_website/covid-fighter/react_ver/src/City.jsx"],"names":["React","Component","useState","useEffect","Map","GoogleApiWrapper","Route","HashRouter","NavLink","clsx","axios","citypic","MDBDataTable","City","props","data","setData","originalData","setOriginalData","searchString","get","then","result","index","length","latitude","toString","longitude","population","testData","columns","label","field","sort","width","rows","getUserInput","event","console","log","target","value","setSearch","updateSearchTable","search","updateData","includes","words","split","wordAdded","i","name","toLowerCase","state","push","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport citypic from \"./citypic.jpg\"\nimport { MDBDataTable } from 'mdbreact';\nimport \"./subpage.css\";\n\n\n// function made from the Grocery class below\nfunction City(props){\n\n  //variables for search parameters\n  // const [search, setSearch] = useState(\"\");\n\n\n  //variables, change all vars to const or let\n  const [data, setData] = useState();\n  const [originalData, setOriginalData] = useState();\n\n  useEffect(()=> {\n      var searchString  = '/api/City/all/';\n      axios.get(searchString).then((result) => {\n        for (var index = 0; index < result.data.length; index++) {\n          result.data[index].latitude = result.data[index].latitude.toString();\n          result.data[index].longitude = result.data[index].longitude.toString();\n          result.data[index].population = result.data[index].population.toString();\n        }\n      \n        setOriginalData(result.data);\n        setData(result.data);\n    });\n\n  }, []  )\n\nconst testData = {\n  columns: [\n    {\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    },\n    {\n      label: 'State',\n      field: 'state',\n      sort: 'asc',\n      width: 270\n    },\n    {\n      label: 'Latitude',\n      field: 'latitude',\n      sort: 'asc',\n      width: 200\n    },\n    {\n      label: 'Longitude',\n      field: 'longitude',\n      sort: 'asc',\n      width: 100\n    },\n    {\n      label: 'Population',\n      field: 'population',\n      sort: 'asc',\n      width: 150\n    }\n  ],\n  rows: data\n};\n\n\nconst getUserInput = event => {\n  console.log(event.target.value);\n  setSearch(event.target.value);\n  updateSearchTable(event.target.value);\n};\n\nconst updateSearchTable = (search) => {\n  let updateData = [];\n \n  if(search === \"\"){\n    setData(originalData);\n  }\n  if(search.includes(\" \")){\n    let words = search.split(\" \");\n\n      for (var index = 0; index < originalData.length; index++) {\n        let wordAdded = true;\n\n        for(var i = 0; i < words.length; i++){\n          if(!(originalData[index].name.toLowerCase().includes(words[i].toLowerCase())) && !(originalData[index].state.toLowerCase().includes(words[i].toLowerCase())) && \n              !(originalData[index].latitude.toLowerCase().includes(words[i].toLowerCase())) && !(originalData[index].longitude.toLowerCase().includes(words[i].toLowerCase()))\n              && !(originalData[index].population.toLowerCase().includes(words[i].toLowerCase()))){\n\n            wordAdded = false;\n          }\n        }\n        \n        if(wordAdded){\n          updateData.push(originalData[index]);\n        }\n      }\n  }\n  else{\n    for (var index = 0; index < originalData.length; index++) {\n      if((originalData[index].name.toLowerCase().includes(search.toLowerCase())) || (originalData[index].state.toLowerCase().includes(search.toLowerCase())) ||\n        (originalData[index].latitude.toLowerCase().includes(search.toLowerCase())) ||  (originalData[index].longitude.toLowerCase().includes(search.toLowerCase()))\n        || (originalData[index].population.toLowerCase().includes(search.toLowerCase()))){\n        \n          updateData.push(originalData[index]);\n      }\n    }\n  }\n\n  setData(updateData);\n\n}; \n\n\nreturn (\n  <div>\n  <img src={citypic} className={\"subpage_img\"} alt=\"city\"/>\n  <br></br>\n  <br></br>\n\n  <center>\n    <h2>Cities</h2>\n      </center>    \n  \n    <br></br>\n    <br></br>\n\n    <center>\n      <form onSubmit={e => { e.preventDefault(); }}>\n        <input type=\"text\" name=\"input\" value={search} onChange={getUserInput} placeholder= \"Search by Name, State, Latitude, Longitude, Population\"></input>\n      </form>\n    </center>\n\n    <br></br>\n\n  <MDBDataTable\n    striped\n    bordered\n    small\n    data={testData}\n    searching = {false}\n  />\n  </div>\n  \n\n);\n};\n\n\nexport default City;\n\n"]},"metadata":{},"sourceType":"module"}